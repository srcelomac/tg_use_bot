from aiogram import Bot, Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from utils.states import Base
import keyboard
import sqlite3
import math
import os
import webbrowser
import random
import requests
import json
import string
import threading
from aiogram.enums import ParseMode

router = Router()

def diff_letters(a, b):
    return sum(a[i] != b[i] for i in range(min(len(a), len(b))))

task_4 = [
    ['аэропорты', 'аэропОрты'],
    ['банты', 'бАнты'],
    ['бороду', 'бОроду'],
    ['бухгалтеров', 'бухгАлтеров'],
    ['вероисповедание', 'вероисповЕдание'],
    ['водопровод', 'водопровОд'],
    ['газопровод', 'газопровОд'],
    ['гражданство', 'граждАнство'],
    ['дефис', 'дефИс'],
    ['дешевизна', 'дешевИзна'],
    ['диспансер', 'диспансЕр'],
    ['договорённость', 'договорЁнность'],
    ['документ', 'докумЕнт'],
    ['досуг', 'досУг'],
    ['еретик', 'еретИк'],
    ['жалюзи', 'жалюзИ'],
    ['значимость', 'знАчимость'],
    ['иксы', 'Иксы'],
    ['каталог', 'каталОг'],
    ['квартал', 'квартАл'],
    ['километр', 'киломЕтр'],
    ['конусов', 'кОнусов'],
    ['корысть', 'корЫсть'],
    ['краны', 'крАны'],
    ['кремень, кремня', 'кремЕнь, кремнЯ'],
    ['лекторов', 'лЕкторов'],
    ['локтя, локтей', 'лОктя, локтЕй'],
    ['лыжня', 'лыжнЯ'],
    ['местностей', 'мЕстностей'],
    ['намерение', 'намЕрение'],
    ['нарост', 'нарОст'],
    ['недруг', 'нЕдруг'],
    ['недуг', 'недУг'],
    ['некролог', 'некролОг'],
    ['ненависть', 'нЕнависть'],
    ['нефтепровод', 'нефтепровОд'],
    ['новостей', 'новостЕй'],
    ['ногтя, ногтей', 'нОгтя, ногтЕй'],
    ['отзыв (о книге)', 'Отзыв'],
    ['отзыв (посла из страны)', 'отзЫв'],
    ['отрочество', 'Отрочество'],
    ['партер', 'партЕр'],
    ['портфель', 'портфЕль'],
    ['поручни', 'пОручни'],
    ['приданое', 'придАное'],
    ['призыв', 'призЫв'],
    ['свёкла', 'свЁкла'],
    ['сироты', 'сирОты'],
    ['созыв', 'созЫв'],
    ['сосредоточение', 'сосредотОчение'],
    ['средства', 'срЕдства'],
    ['статуя', 'стАтуя'],
    ['столяр', 'столЯр'],
    ['таможня', 'тамОжня'],
    ['торты', 'тОрты'],
    ['туфля', 'тУфля'],
    ['цемент', 'цемЕнт'],
    ['центнер', 'цЕнтнер'],
    ['цепочка', 'цепОчка'],
    ['шарфы', 'шАрфы'],
    ['шофер', 'шофЁр'],
    ['эксперт', 'экспЕрт'],
    ['верна, верный', 'вернА, вЕрный'],
    ['значимый', 'знАчимый'],
    ['красивее', 'КрасИвее'],
    ['кухонный', 'кУхонный'],
    ['ловка, ловкий', 'ловкА, лОвкий'],
    ['мозаичный', 'мозаИчный'],
    ['оптовый', 'оптОвый'],
    ['прозорливый', 'прозорлИвый'],
    ['сливовый', 'слИвовый'],
    ['брала, брать', 'бралА, брАть'],
    ['бралась, браться', 'бралАсь, брАться'],
    ['взяла', 'взялА'],
    ['взялась, взяться', 'взялАсь, взЯться'],
    ['влилась, влиться', 'влилАсь, влИться'],
    ['ворвалась, ворваться', 'ворвалАсь, ворвАться'],
    ['воспринять', 'воспринЯть'],
    ['воссоздала', 'воссоздалА'],
    ['вручит', 'вручИт'],
    ['гнала', 'гналА'],
    ['гналась', 'гналАсь'],
    ['добрала', 'добралА'],
    ['добралась', 'добралАсь'],
    ['дождалась', 'дождалАсь'],
    ['дозвонится', 'дозвонИтся'],
    ['дозировать', 'дозИровать'],
    ['ждала', 'ждалА'],
    ['жилось', 'жилОсь'],
    ['закупорить', 'закУпорить'],
    ['занять, занял, заняла, заняли', 'занЯть, зАнял, занялА, зАняли'],
    ['заперла', 'заперлА'],
    ['запломбировать', 'запломбировАть'],
    ['защемит', 'защемИт'],
    ['звала', 'звалА'],
    ['звонит', 'звонИт'],
    ['кашлянуть', 'кАшлянуть'],
    ['клала', 'клАла'],
    ['клеить', 'клЕить'],
    ['кралась', 'крАлась'],
    ['кровоточить', 'кровоточИть'],
    ['лгала', 'лгалА'],
    ['лила', 'лИлА'],
    ['лилась', 'лИлась'],
    ['наврала', 'навралА'],
    ['наделит', 'наделИт'],
    ['надорвалась', 'надорвалАсь'],
    ['назвалась', 'назвалАсь'],
    ['накренится', 'накренИтся'],
    ['налила', 'налилА'],
    ['нарвала', 'нарвалА'],
    ['начать, начал, начала, начали', 'начАть, нАчал, началА, нАчали'],
    ['обзвонит', 'обзвонИт'],
    ['облегчить, облегчит', 'облегчИть, облегчИт'],
    ['облилась', 'облилАсь'],
    ['обнялась', 'обнялАсь'],
    ['обогнала', 'обогналА'],
    ['ободрала', 'ободралА'],
    ['ободрить, ободрит', 'ободрИть, ободрИт'],
    ['ободриться, ободрится', 'ободрИться, ободрИтся'],
    ['обострить', 'обострИть'],
    ['одолжить, одолжит', 'одолжИть, одолжИт'],
    ['озлобить', 'озлОбить'],
    ['оклеить', 'оклЕить'],
    ['окружит', 'окружИт'],
    ['опошлить', 'опОшлить'],
    ['Осведомиться, осведомится', 'освЕдомиться, освЕдомится'],
    ['отбыла', 'отбылА'],
    ['отдала', 'отдалА'],
    ['откупорить', 'откУпорить'],
    ['отозвала', 'отозвалА'],
    ['отозвалась', 'отозвалАсь'],
    ['перезвонит', 'перезвонИт'],
    ['перелила', 'перелилА'],
    ['плодоносить', 'плодоносИть'],
    ['пломбировать', 'пломбировАть'],
    ['повторит', 'повторИт'],
    ['позвала', 'позвалА'],
    ['позвонит', 'позвонИт'],
    ['полила', 'полилА'],
    ['положить, положил', 'положИть, положИл'],
    ['понять, поняла', 'понЯть, понялА'],
    ['послала', 'послАла'],
    ['прибыть, прибыл, прибыла, прибыли', 'прибЫть, прИбыл, прибылА, прИбыли'],
    ['принять, принял, приняла, приняли', 'принЯть, прИнял, принялА, прИняли'],
    ['рвала', 'рвалА'],
    ['сверлит', 'сверлИт'],
    ['сняла', 'снялА'],
    ['соврала', 'совралА'],
    ['создала', 'создалА'],
    ['сорвала', 'сорвалА'],
    ['сорит', 'сорИт'],
    ['убрала', 'убралА'],
    ['углубить', 'углубИть'],
    ['укрепит', 'укрепИт'],
    ['черпать', 'чЕрпать'],
    ['щемит', 'щемИт'],
    ['щёлкать', 'щЁлкать'],
    ['довезённый', 'довезЁнный'],
    ['загнутый', 'зАгнутый'],
    ['занятый, занята', 'зАнятый, занятА'],
    ['запертый', 'зАпертый'],
    ['заселённый, заселена', 'заселЁнный, заселенА'],
    ['кормящий', 'кормЯщий'],
    ['кровоточащий', 'кровоточАщий'],
    ['наживший', 'нажИвший'],
    ['наливший', 'налИвший'],
    ['нанявшийся', 'нанЯвшийся'],
    ['начавший', 'начАвший'],
    ['начатый', 'нАчатый'],
    ['низведённый', 'низведЁнный'],
    ['облегчённый', 'облегчЁнный'],
    ['ободрённый', 'ободрЁнный'],
    ['обострённый', 'обострЁнный'],
    ['отключённый', 'отключЁнный'],
    ['повторённый', 'повторЁнный'],
    ['поделённый', 'поделЁнный'],
    ['понявший', 'понЯвший'],
    ['принятый, принята', 'прИнятый, принятА'],
    ['приручённый', 'приручЁнный'],
    ['проживший', 'прожИвший'],
    ['снята', 'снятА'],
    ['согнутый', 'сОгнутый'],
    ['углублённый', 'углублЁнный'],
    ['закупорив', 'закУпорив'],
    ['начав', 'начАв'],
    ['начавшись', 'начАвшись'],
    ['отдав', 'отдАв'],
    ['подняв', 'поднЯв'],
    ['поняв', 'понЯв'],
    ['прибыв', 'прибЫв'],
    ['создав', 'создАв'],
    ['вовремя', 'вОвремя'],
    ['доверху', 'дОверху'],
    ['донельзя', 'донЕльзя'],
    ['донизу', 'дОнизу'],
    ['досуха', 'дОсуха'],
    ['засветло', 'зАсветло'],
    ['затемно', 'зАтемно'],
    ['красивее', 'красИвее'],
    ['надолго', 'надОлго'],
    ['ненадолго', 'ненадОлго']
]

task_9 = [
        ['ч_та', 'е'],
        ['соч_тание', 'е'],
        ['соч_тать', 'е'],
        ['словосоч_тание', 'е'],
        ['бракосоч_тание', 'е'],
        ['п_лог', 'о'],
        ['утв_рь', 'а'],
        ['приг_рь', 'а'],
        ['изг_рь', 'а'],
        ['выг_рки', 'а'],
        ['гар_вой', 'е'],
        ['р_сток', 'о'],
        ['р_сточек', 'о'],
        ['р_стовой', 'о'],
        ['р_стовщик', 'о'],
        ['р_стовщичество', 'о'],
        ['р_стовщический', 'о'],
        ['на выр_ст', 'о'],
        ['выр_стной', 'о'],
        ['выр_сток', 'о'],
        ['зар_сток', 'о'],
        ['прор_сть', 'о'],
        ['подр_стковый', 'о'],
        ['Р_стислав', 'о'],
        ['Р_стов', 'о'],
        ['отр_сль', 'а'],
        ['отр_слевой', 'а'],
        ['межотр_слевой', 'а'],
        ['внутриотр_слевой', 'а'],
        ['отр_слевик', 'а'],
        ['ск_кать', 'а'],
        ['ск_чу', 'а'],
        ['ск_кал', 'а'],
        ['ск_кали', 'а'],
        ['ск_чи', 'а'],
        ['ск_чите', 'а'],
        ['ск_кавший', 'а'],
        ['ск_ча', 'а'],
        ['ск_чок', 'а'],
        ['ск_чкообразный', 'а'],
        ['р_внина', 'а'],
        ['р_внение', 'а'],
        ['ур_вень', 'о'],
        ['п_ровну', 'о'],
        ['р_весник', 'о'],
        ['пл_вец', 'о'],
        ['пл_вчиха', 'о'],
        ['пл_вцы', 'о'],
        ['пл_вуны', 'ы']]

task_11 = [
    ['ла_ть', 'я'], ['та_ть', 'я'], ['ка_ться', 'я'], ['ве_ть', 'я'], ['наде_ться', 'я'], ['леле_ть', 'я'], ['се_ть', 'я'], ['зате_ть', 'я'], ['чу_ть', 'я'], ['ре_ть', 'я'], ['бле_ть', 'я'], ['кашл_ть', 'я'], ['дра_ть', 'и'], ['кле_ть', 'и']
]

task_13 = [
    ['не_кто_иной, как', 'не кто иной, как'],
    ['не_что_иное, как', 'не что иное, как'],
    ['ни_что_иное, кроме', 'ничто иное, кроме'],
    ['ни_кто_иной, кроме', 'никто иной, кроме'],
    ['во_что_бы_то_ни_стало', 'во что бы то ни стало'],
    ['не_рад', 'не рад'],
    ['не_должен', 'не должен'],
    ['не_способен', 'не способен'],
    ['не_обязан', 'не обязан'],
    ['не_согласен', 'не согласен'],
    ['не_склонен', 'не склонен'],
    ['не_расположен', 'не расположен'],
    ['не_готов', 'не готов'],
    ['не_намерен', 'не намерен'],
    ['не_прав', 'не прав'],
    ['не_похож', 'не похож'],
    ['не_горазд', 'не горазд'],
    ['не_в_домёк', 'невдомёк'], ['не_в_значай', 'невзначай'], ['не_в_моготу', 'невмоготу'], ['не_в_мочь', 'невмочь'], ['не_в_попад', 'невпопад'], ['не_в_терпёж', 'невтерпёж'], ['не_к_стати', 'некстати'],
    ['не_с_проста', 'неспроста'], ['не_за_чем', 'незачем'], ['не_в_проворот', 'невпроворот'], ['не_у_жто', 'неужто'], ['не_у_жели', 'неужели'], ['не_на_роком', 'ненароком'], ['не_по_далёку', 'неподалёку'],
    ['не_даром {в значении «не напрасно»}', 'недаром'], [' не_даром {в значении «не бесплатно»}', 'не даром'],
    ['не_хотя', 'нехотя'],
    ['не_в_зачет', 'не в зачет'], ['не_в_меру', 'не в меру'], ['не_в_полне', 'не вполне'], ['не_в_пример', 'не в пример'], ['не_всерьёз', 'не всерьёз'], ['не_ровён_час', 'не ровён час'], ['не_здесь', 'не здесь'], ['не_к_добру', 'не к добру'], ['не_иначе', 'не иначе'], ['не_по_вкусу', 'не по вкусу'], ['не_по_нутру', 'не по нутру'], ['не_зря', 'не зря'], ['не_по_плечу', 'не по плечу'], ['не_против', 'не против'], ['не_прочь', 'не прочь'], ['не_под_силу', 'не под силу'], ['ни_за_грош', 'ни за грош'], ['не_спеша', 'не спеша'], ['незачем {прятаться, нет причины}', 'незачем'], ['не_за_чем {спрятаться, нет предмета}', 'не за чем'], ['неотчего {расстраиваться, нет причины}', 'неотчего'], ['не_от_чего {оттолкнуться, нет предмета}', 'не от чего']
]

'''
task_14 = [
    ['в_близи', '1'], ['в_бок', '1'], ['в_брод', '1'], ['в_век', '1'], ['в_верх', '1'], ['в_верху', '1'], ['в_вечеру', '1'], ['в_волю', '1'], ['в_высь', '1'], ['в_глубь', '1'], ['в_далеке', '1'], ['в_дали', '1'], ['в_даль', '1'], ['в_двое', '1'], ['в_двоём', '1'], ['в_двойне', '1'], ['в_добавок', '1'], ['в_доволь', '1'], ['в_догонку', '1'], ['в_доль', '1'], ['в_досталь', '1'], ['в_дребезги', '1'], ['в_друг', '1'], ['в_дрызг', '1'], ['в_зад', '1'], ['в_заём', '1'], ['в_займы', '1'], ['в_замен', '1'], ['в_заперти', '1'], ['в_заправду', '1'], ['в_запуски', '1'], ['в_затяжку', '1'], ['в_зашей', '1'], ['в_конец', '1'], ['в_кось', '1'], ['в_кратце', '1'], ['в_кривь', '1'], ['в_крутую', '1'], ['в_купе', '1'], ['в_лево', '1'], ['в_лёт', '1'], ['в_месте', '1'], ['в_миг', '1'], ['в_наём', '1'], ['в_наймы', '1'], ['в_накидку', '1'], ['в_накладку', '1'], ['в_начале', '1'], ['в_низ', '1'], ['в_низу', '1'], ['в_ничью', '1'], ['в_нове', '1'], ['в_новь', '1'], ['в_нутри', '1'], ['в_нутрь', '1'], ['в_овек', '1'], ['в_овремя', '1'], ['в_овсе', '1'], ['в_овсе', '1'], ['в_оедино', '1'], ['в_оистину', '1'], ['в_округ', '1'], ['в_ообще', '1'], ['в_оочию', '1'], ['в_освояси', '1'], ['в_ослед', '1'], ['в_первые', '1'], ['в_перебой', '1'], ['в_перевалку', '1'], ['в_перегиб', '1'], ['в_перегонки', '1'], ['в_перёд', '1'], ['в_переди', '1'], ['в_перемежку', '1'], ['в_перемешку', '1'], ['в_перехват', '1'], ['в_плавь', '1'], ['в_повалку', '1'], ['в_полголоса', '1'], ['в_полне', '1'], ['в_полоборота', '1'], ['в_половину', '1'], ['в_полпути', '1'], ['в_попыхах', '1'], ['в_пору {«по мерке»}', '1'], ['в_последствии', '1'], ['в_потьмах', '1'], ['в_правду', '1'], ['в_праве', '1'], ['в_право', '1'], ['в_приглядку', '1'], ['в_прикуску', '1'], ['в_припрыжку', '1'], ['в_присядку', '1'], ['в_проголодь', '1'], ['в_прок', '1'], ['в_просак', '1'], ['в_просонках', '1'], ['в_прочем', '1'], ['в_прямь', '1'], ['в_пустую', '1'], ['в_раз', '1'], ['в_разбивку', '1'], ['в_разброд', '1'], ['в_разброс', '1'], ['в_развалку', '1'], ['в_разнобой', '1'], ['в_разнос', '1'], ['в_разрез', '1'], ['в_разрядку', '1'], ['в_расплох', '1'], ['в_рассыпную', '1'], ['в_растяжку {произносить слова врастяжку', '1'], ['н_о: отдать обувь в растяжку}', '1'], ['в_ровень', '1'], ['в_розь', '1'], ['в_рукопашную', '1'], ['в_ряд ли', '1'], ['в_серьёз', '1'], ['в_сецело', '1'], ['в_скачь', '1'], ['в_скользь', '1'], ['в_скоре', '1'], ['в_скорости', '1'], ['в_сласть', '1'], ['в_след', '1'], ['в_слепую', '1'], ['в_слух', '1'], ['в_слух', '1'], ['в_смятку', '1'], ['в_сплошную', '1'], ['в_старь', '1'], ['в_сухомятку', '1'], ['в_сюду', '1'], ['в_тайне {сделать втайне «тайно»', '1'], ['н_о: сохранить в тайне - «в секрете»}', '1'], ['в_тёмную', '1'], ['в_тихомолку', '1'], ['в_торопях', '1'], ['в_тридорога', '1'], ['в_трое', '1'], ['в_троём', '1'], ['в_четверо', '1'], ['в_четвером', '1'], ['в_черне', '1'], ['в_чистую', '1'], ['в_ширь', '1'], ['в_ъявь', '1'],
    ['к_верху', '1'], ['к_низу', '1'], ['к_ряду', '1'], ['к_стати', '1'],
    ['с_боку', '1'], ['с_верху', '1'], ['с_высока', '1'], ['с_горяча', '1'], ['с_зади', '1'], ['с_лева', '1'], ['с_лишком', '1'], ['с_молоду', '1'], ['с_наружи', '1'], ['с_начала', '1'], ['с_низу', '1'], ['с_нова', '1'], ['с_овсем', '1'], ['с_ослепу', '1'], ['с_перва', '1'], ['с_первоначала', '1'], ['с_переди', '1'], ['с_плеча', '1'], ['с_позаранку', '1'], ['с_права', '1'], ['с_просонок', '1'], ['с_просонья', '1'], ['с_проста', '1'], ['с_пьяну', '1'], ['с_разу', '1'], ['с_родни', '1'], ['с_роду', '1'], ['с_ряду', '1'], ['с_тремглав', '1'], ['с_ыздавна', '1'], ['с_ызмала', '1'], ['с_ызнова ', '1'],
    ['до_бела', '1'], ['до_веку', '1'], ['до_верху', '1'], ['до_коле', '1'], ['до_красна', '1'], ['до_куда', '1'], ['до_нельзя', '1'], ['до_низу', '1'], ['до_ныне', '1'], ['до_пьяна', '1'], ['до_селе', '1'], ['до_суха', '1'], ['до_сюда', '1'], ['до_тла', '1'], ['до_толе', '1'], ['до_туда', '1'], ['до_чиста', '1'],
    ['за_даром', '1'], ['за_долго', '1'], ['за_живо', '1'], ['за_зря', '1'], ['за_мертво', '1'], ['за_муж', '1'], ['за_ново', '1'], ['за_одно', '1'], ['за_панибрата', '1'], ['за_раз', '1'], ['за_тем', '1'], ['за_частую', '1'], ['за_чем', '1'],
    ['из_вне', '1'], ['из_давна', '1'], ['из_далека', '1'], ['из_дали', '1'], ['из_желта', '1'], ['из_нутри', '1'], ['из_редка', '1'], ['ис_кони', '1'], ['ис_коса', '1'], ['ис_красна', '1'], ['ис_подволь', '1'], ['ис_подлобья', '1'], ['ис_подтишка', '1'], ['ис_покон', '1'], ['ис_полу', '1'], ['ис_синя', '1'], ['ис_стари', '1'],
    ['на_бекрень', '1'], ['на_бело', '1'], ['на_бок', '1'], ['на_век', '1'], ['на_верно', '1'], ['на_верняка', '1'], ['на_верх', '1'], ['на_верху', '1'], ['на_веселе', '1'], ['на_вечно', '1'], ['на_взничь', '1'], ['на_взрыд', '1'], ['на_вряд ли', '1'], ['на_всегда', '1'], ['на_встречу', '1'], ['на_выворот', '1'], ['на_выкат', '1'], ['на_вылет', '1'], ['на_вынос', '1'], ['на_выпуск', '1'], ['на_вырез', '1'], ['на_вытяжку', '1'], ['на_глухо', '1'], ['на_голо {«о стрижке»}', '1'], ['на_голову', '1'], ['на_готове', '1'], ['на_двое', '1'], ['на_голову', '1'], ['на_едине', '1'], ['на_завтра', '1'], ['на_зад', '1'], ['на_зади', '1'], ['на_земь', '1'], ['на_зло', '1'], ['на_зубок {выучить назубок}', '1'], ['подарить на_зубок', '2'], ['на_изготове', '1'], ['на_изнанку', '1'], ['на_изусть', '1'], ['на_искосок', '1'], ['на_искось', '1'], ['на_кануне', '1'], ['на_конец', '1'], ['на_крепко', '1'], ['на_лево', '1'], ['на_легке', '1'], ['на_лицо', '1'], ['на_медни', '1'], ['на_много', '1'], ['на_оборот', '1'], ['на_обум', '1'], ['на_отмашь', '1'], ['на_отрез', '1'], ['на_перебой', '1'], ['на_перевес', '1'], ['на_перегонки', '1'], ['на_перёд', '1'], ['на_перекор', '1'], ['на_перекрест', '1'], ['на_перерез', '1'], ['на_перерыв', '1'], ['на_перехват', '1'], ['на_перечёт', '1'], ['на_повал', '1'], ['на_показ', '1'], ['на_половину', '1'], ['на_последок', '1'], ['на_право', '1'], ['на_пример', '1'], ['на_прокат', '1'], ['на_пролёт', '1'], ['на_пролом', '1'], ['на_пропалую', '1'], ['на_против', '1'], ['на_прямик', '1'], ['на_равне', '1'], ['на_распашку', '1'], ['на_распев', '1'], ['на_расхват', '1'], ['на_ружу', '1'], ['на_ряду', '1'], ['на_силу', '1'], ['на_сквозь', '1'], ['на_сколько', '1'], ['на_скоро', '1'], ['на_смарку', '1'], ['на_смерть', '1'], ['на_спех', '1'], ['на_стежь', '1'], ['на_столько', '1'], ['на_стороже', '1'], ['на_строго', '1'], ['на_сухо', '1'], ['на_тощак', '1'], ['на_угад', '1'], ['на_удалую', '1'], ['на_удачу', '1'], ['на_утёк', '1'], ['на_утро', '1'], ['на_цело', '1'], ['на_чеку', '1'], ['на_черно', '1'], ['на_чисто', '1'], ['на_чистоту', '1'], ['на_яву', '1'], ['не_вдалеке', '1'], ['не_вдомёк', '1'], ['не_взначай', '1'], ['не_вмоготу', '1'], ['не_вмочь', '1'], ['не_впопад', '1'], ['не_впроворот', '1'], ['не_втерпёж', '1'], ['не_даром', '1'], ['не_задолго', '1'], ['не_зачем', '1'], ['не_кстати', '1'], ['не_надолго {ушёл ненадолго}', '1'], ['не_однократно', '1'], ['не_охота', '1'], ['не_спроста', '1'],
    ['о_земь', '1'], [' о_тколе', '1'], ['от_нюдь', '1'], ['от_роду {не видел}', '1'], ['пятнадцати лет от_роду', '2'], ['от_селе', '1'], ['от_сюда', '1'], ['от_того', '1'], ['от_туда', '1'], ['от_части', '1'], ['от_чего', '1'],
    ['по_ближе', '1'], ['по_близости', '1'], ['по_боку', '1'], ['по_верх', '1'], ['по_взводно', '1'], ['по_всюду', '1'], ['по_давно', '1'], ['по_делом', '1'], ['по_дешевле', '1'], ['по_долгу', '1'], ['по_дольше', '1'], ['по_дряд', '1'], ['по_дчас', '1'], ['по_дчистую', '1'], ['по_завчера', '1'], ['по_зади', '1'], ['по_истине', '1'], ['по_камест', '1'], ['по_маленьку', '1'], ['по_малу', '1'], ['по_многу', '1'], ['по_напрасну', '1'], ['по_наслышке', '1'], ['по_неволе', '1'], ['по_немногу', '1'], ['по_низу', '1'], ['по_ныне', '1'], ['по_одаль', '1'], ['по_одиночке', '1'], ['по_очерёдно', '1'], ['по_парно', '1'], ['по_перёк', '1'], ['по_полам', '1'], ['по_полудни', '1'], ['по_полуночи', '1'], ['по_просту', '1'], ['по_пусту', '1'], ['по_ровну', '1'], ['по_ротно', '1'], ['по_сему', '1'], ['по_скольку', '1'], ['по_слезавтра', '1'], ['по_сотенно', '1'], ['по_среди', '1'], ['по_средине', '1'], ['по_статейно', '1'], ['по_суху', '1'], ['по_тихоньку', '1'], ['по_том', '1'], ['по_тому', '1'], ['по_утру', '1'], ['по_чём', '1'], ['по_чему', '1'], ['по_этому ', '1'],
    ['тот_час', '1'], ['черес_чур', '1'],
    ['без_спросу', '2'], ['без_толку', '2'], ['без_удержу', '2'], ['без_умолку', '2'], ['без_устали', '2'],
    ['один_на_один', 'один на один'], ['от_мала_до_велика', 'от мала до велика'],
    ['в_головах', '2'], ['в_диковинку', '2'], ['в_конце_концов', 'в конце концов'], ['в_корне', '2'], ['в_меру', '2'], ['в_наклон', '2'], ['в_насмешку', '2'], ['в_ногу', '2'], ['в_обмен', '2'], ['в_обнимку', '2'], ['в_обрез', '2'], ['в_обтяжку', '2'], ['в_обхват', '2'], ['в_общем', '2'], ['во_всеоружии', '2'], ['во_всеуслышание', '2'], ['в_одиночку', '2'], ['во_сто_крат', 'во сто крат'], ['в_открытую', '2'], ['в_отместку', '2'], ['в_охапку', '2'], ['в_прах', '2'], ['в_противовес', '2'], ['в_рассрочку', '2'], ['в_розницу', '2'], ['в_ряд', '2'], ['в_сердцах', '2'], ['в_складчину', '2'], ['вслед_за_тем', 'вслед за тем'], ['в_срок', '2'], ['в_старину', '2'], ['в_сторону', '2'], ['в_струнку', '2'], ['в_тиши', '2'], ['в_три_погибели', 'в три погибели'], ['в_тупик', '2'], ['в_упор', '2'],
    ['до_востребования', '2'], ['до_зарезу', '2'], ['до_крайности', '2'], ['до_неузнаваемости', '2'], ['до_отвала', '2'], ['до_отказа', '2'], ['до_сих_пор', 'до сих пор'], ['до_смерти', '2'], ['до_упаду', '2'],
    ['за_глаза', '2'], ['за_границей', '2'], ['за_границу', '2'], ['за_полночь', '2'],
    ['на_авось', '2'], ['на_бегу', '2'], ['на_боковую', '2'], ['на_веки_веков', 'на веки веков'], ['на_веки_вечные', 'на веки вечные'], ['на_вес', '2'], ['на_весу', '2'], ['на_вид', '2'], ['на_виду', '2'], ['на_вкус', '2'], ['на_время', '2'], ['на_выбор', '2'], ['на_глаз', '2'], ['на_глазах', '2'], ['на_глазок', '2'], ['на_грех', '2'], ['на_диво', '2'], ['на_днях', '2'], ['на_дом', '2'], ['на_дому', '2'], ['на_дыбы', '2'], ['на_зависть', '2'], ['на_запятки', '2'], ['на_излёте', '2'], ['на_измор', '2'], ['на_износ', '2'], ['на_исходе', '2'], ['на_корточках', '2'], ['на_лад', '2'], ['на_лету', '2'], ['на_манер', '2'], ['на_миг', '2'], ['на_мировую', '2'], ['на_нет', '2'], ['на_отлёте', '2'], ['на_отлично', '2'], ['на_ощупь', '2'], ['на_память', '2'], ['на_плаву', '2'], ['на_попятную', '2'], ['на_поруках', '2'], ['на_прицел', '2'], ['на_редкость', '2'], ['на_руку', '2'], ['на_скаку', '2'], ['на_славу', '2'], ['на_смех', '2'], ['на_совесть', '2'], ['на_страже', '2'], ['на_убой', '2'], ['на_ура', '2'], ['на_ходу', '2'], ['на_хорошо', '2'], ['на_цыпочках', '2'], ['на_часах', '2'], ['на_четвереньках', '2'], ['не_в_духе', 'не в духе'], ['не_в_зачёт', 'не в зачёт'], ['не_в_меру', 'не в меру'], ['не_в_пример', 'не в пример'], ['не_даром', '2'], ['не_к_добру', 'не к добру'], ['не_к_успеху', 'не к успеху'], ['не_по_вкусу', 'не по вкусу'], ['не_под_силу', 'не под силу'], ['не_по_зубам', 'не по зубам'], ['не_по_нутру', 'не по нутру'], ['не_по_плечу', 'не по плечу'], ['не_прочь', '2'], ['не_с_руки', 'не с руки'], ['ни_за_грош', 'ни за грош'], ['нога_в_ногу', 'нога в ногу'],
    ['по_временам', '2'], ['под_боком', '2'], ['под_вечер', '2'], ['под_гору', '2'], ['по_дешёвке', '2'], ['под_исход', '2'], ['под_конец', '2'], ['под_ложечкой', '2'], ['под_мышками', '2'], ['под_силу', '2'], ['под_спуд{ом}', '2'], ['под_стать', '2'], ['по_двое', '2'], ['под_шумок', '2'], ['под_уздцы', '2'], ['под_уклон', '2'], ['по_крайней_мере', 'по крайней мере'], ['по_нутру', '2'], ['по_одному', '2'], ['по_очереди', '2'], ['по_преимуществу', '2'], ['по_совести', '2'], ['по_трое', '2'], ['про_себя', '2'],
    ['с_боку_на_бок', 'с боку на бок'], ['с_ведома', '2'], ['с_виду', '2'], ['с_глазу_на_глаз', 'с глазу на глаз'], ['слово_в_слово', 'слово в слово'], ['слово_за_слово', 'слово за слово'], ['с_маху', '2'], ['с_налёта', '2'], ['с_наскока', '2'], ['с_начала_до_конца', 'с начала до конца'], ['с_разбегу', '2'], ['с_разгона', '2'], ['с_размаху', '2'], ['с_ходу', '2'], ['с_часу_на_час', 'с часу на час'],
    ['час_от_часу', 'час от часу']
]
'''

task_14 = [['в_близи', 'слитно'], ['в_бок', 'слитно'], ['в_брод', 'слитно'], ['в_век', 'слитно'], ['в_верх', 'слитно'], ['в_верху', 'слитно'], ['в_вечеру', 'слитно'], ['в_волю', 'слитно'], ['в_высь', 'слитно'], ['в_глубь', 'слитно'], ['в_далеке', 'слитно'], ['в_дали', 'слитно'], ['в_даль', 'слитно'], ['в_двое', 'слитно'], ['в_двоём', 'слитно'], ['в_двойне', 'слитно'], ['в_добавок', 'слитно'], ['в_доволь', 'слитно'], ['в_догонку', 'слитно'], ['в_доль', 'слитно'], ['в_досталь', 'слитно'], ['в_дребезги', 'слитно'], ['в_друг', 'слитно'], ['в_дрызг', 'слитно'], ['в_зад', 'слитно'], ['в_заём', 'слитно'], ['в_займы', 'слитно'], ['в_замен', 'слитно'], ['в_заперти', 'слитно'], ['в_заправду', 'слитно'], ['в_запуски', 'слитно'], ['в_затяжку', 'слитно'], ['в_зашей', 'слитно'], ['в_конец', 'слитно'], ['в_кось', 'слитно'], ['в_кратце', 'слитно'], ['в_кривь', 'слитно'], ['в_крутую', 'слитно'], ['в_купе', 'слитно'], ['в_лево', 'слитно'], ['в_лёт', 'слитно'], ['в_месте', 'слитно'], ['в_миг', 'слитно'], ['в_наём', 'слитно'], ['в_наймы', 'слитно'], ['в_накидку', 'слитно'], ['в_накладку', 'слитно'], ['в_начале', 'слитно'], ['в_низ', 'слитно'], ['в_низу', 'слитно'], ['в_ничью', 'слитно'], ['в_нове', 'слитно'], ['в_новь', 'слитно'], ['в_нутри', 'слитно'], ['в_нутрь', 'слитно'], ['в_овек', 'слитно'], ['в_овремя', 'слитно'], ['в_овсе', 'слитно'], ['в_овсе', 'слитно'], ['в_оедино', 'слитно'], ['в_оистину', 'слитно'], ['в_округ', 'слитно'], ['в_ообще', 'слитно'], ['в_оочию', 'слитно'], ['в_освояси', 'слитно'], ['в_ослед', 'слитно'], ['в_первые', 'слитно'], ['в_перебой', 'слитно'], ['в_перевалку', 'слитно'], ['в_перегиб', 'слитно'], ['в_перегонки', 'слитно'], ['в_перёд', 'слитно'], ['в_переди', 'слитно'], ['в_перемежку', 'слитно'], ['в_перемешку', 'слитно'], ['в_перехват', 'слитно'], ['в_плавь', 'слитно'], ['в_повалку', 'слитно'], ['в_полголоса', 'слитно'], ['в_полне', 'слитно'], ['в_полоборота', 'слитно'], ['в_половину', 'слитно'], ['в_полпути', 'слитно'], ['в_попыхах', 'слитно'], ['в_пору {«по мерке»}', 'слитно'], ['в_последствии', 'слитно'], ['в_потьмах', 'слитно'], ['в_правду', 'слитно'], ['в_праве', 'слитно'], ['в_право', 'слитно'], ['в_приглядку', 'слитно'], ['в_прикуску', 'слитно'], ['в_припрыжку', 'слитно'], ['в_присядку', 'слитно'], ['в_проголодь', 'слитно'], ['в_прок', 'слитно'], ['в_просак', 'слитно'], ['в_просонках', 'слитно'], ['в_прочем', 'слитно'], ['в_прямь', 'слитно'], ['в_пустую', 'слитно'], ['в_раз', 'слитно'], ['в_разбивку', 'слитно'], ['в_разброд', 'слитно'], ['в_разброс', 'слитно'], ['в_развалку', 'слитно'], ['в_разнобой', 'слитно'], ['в_разнос', 'слитно'], ['в_разрез', 'слитно'], ['в_разрядку', 'слитно'], ['в_расплох', 'слитно'], ['в_рассыпную', 'слитно'], ['в_растяжку {произносить слова врастяжку', 'слитно'], ['н_о: отдать обувь в растяжку}', 'слитно'], ['в_ровень', 'слитно'], ['в_розь', 'слитно'], ['в_рукопашную', 'слитно'], ['в_ряд ли', 'слитно'], ['в_серьёз', 'слитно'], ['в_сецело', 'слитно'], ['в_скачь', 'слитно'], ['в_скользь', 'слитно'], ['в_скоре', 'слитно'], ['в_скорости', 'слитно'], ['в_сласть', 'слитно'], ['в_след', 'слитно'], ['в_слепую', 'слитно'], ['в_слух', 'слитно'], ['в_слух', 'слитно'], ['в_смятку', 'слитно'], ['в_сплошную', 'слитно'], ['в_старь', 'слитно'], ['в_сухомятку', 'слитно'], ['в_сюду', 'слитно'], ['в_тайне {сделать втайне «тайно»', 'слитно'], ['н_о: сохранить в тайне - «в секрете»}', 'слитно'], ['в_тёмную', 'слитно'], ['в_тихомолку', 'слитно'], ['в_торопях', 'слитно'], ['в_тридорога', 'слитно'], ['в_трое', 'слитно'], ['в_троём', 'слитно'], ['в_четверо', 'слитно'], ['в_четвером', 'слитно'], ['в_черне', 'слитно'], ['в_чистую', 'слитно'], ['в_ширь', 'слитно'], ['в_ъявь', 'слитно'], ['к_верху', 'слитно'], ['к_низу', 'слитно'], ['к_ряду', 'слитно'], ['к_стати', 'слитно'], ['с_боку', 'слитно'], ['с_верху', 'слитно'], ['с_высока', 'слитно'], ['с_горяча', 'слитно'], ['с_зади', 'слитно'], ['с_лева', 'слитно'], ['с_лишком', 'слитно'], ['с_молоду', 'слитно'], ['с_наружи', 'слитно'], ['с_начала', 'слитно'], ['с_низу', 'слитно'], ['с_нова', 'слитно'], ['с_овсем', 'слитно'], ['с_ослепу', 'слитно'], ['с_перва', 'слитно'], ['с_первоначала', 'слитно'], ['с_переди', 'слитно'], ['с_плеча', 'слитно'], ['с_позаранку', 'слитно'], ['с_права', 'слитно'], ['с_просонок', 'слитно'], ['с_просонья', 'слитно'], ['с_проста', 'слитно'], ['с_пьяну', 'слитно'], ['с_разу', 'слитно'], ['с_родни', 'слитно'], ['с_роду', 'слитно'], ['с_ряду', 'слитно'], ['с_тремглав', 'слитно'], ['с_ыздавна', 'слитно'], ['с_ызмала', 'слитно'], ['с_ызнова ', 'слитно'], ['до_бела', 'слитно'], ['до_веку', 'слитно'], ['до_верху', 'слитно'], ['до_коле', 'слитно'], ['до_красна', 'слитно'], ['до_куда', 'слитно'], ['до_нельзя', 'слитно'], ['до_низу', 'слитно'], ['до_ныне', 'слитно'], ['до_пьяна', 'слитно'], ['до_селе', 'слитно'], ['до_суха', 'слитно'], ['до_сюда', 'слитно'], ['до_тла', 'слитно'], ['до_толе', 'слитно'], ['до_туда', 'слитно'], ['до_чиста', 'слитно'], ['за_даром', 'слитно'], ['за_долго', 'слитно'], ['за_живо', 'слитно'], ['за_зря', 'слитно'], ['за_мертво', 'слитно'], ['за_муж', 'слитно'], ['за_ново', 'слитно'], ['за_одно', 'слитно'], ['за_панибрата', 'слитно'], ['за_раз', 'слитно'], ['за_тем', 'слитно'], ['за_частую', 'слитно'], ['за_чем', 'слитно'], ['из_вне', 'слитно'], ['из_давна', 'слитно'], ['из_далека', 'слитно'], ['из_дали', 'слитно'], ['из_желта', 'слитно'], ['из_нутри', 'слитно'], ['из_редка', 'слитно'], ['ис_кони', 'слитно'], ['ис_коса', 'слитно'], ['ис_красна', 'слитно'], ['ис_подволь', 'слитно'], ['ис_подлобья', 'слитно'], ['ис_подтишка', 'слитно'], ['ис_покон', 'слитно'], ['ис_полу', 'слитно'], ['ис_синя', 'слитно'], ['ис_стари', 'слитно'], ['на_бекрень', 'слитно'], ['на_бело', 'слитно'], ['на_бок', 'слитно'], ['на_век', 'слитно'], ['на_верно', 'слитно'], ['на_верняка', 'слитно'], ['на_верх', 'слитно'], ['на_верху', 'слитно'], ['на_веселе', 'слитно'], ['на_вечно', 'слитно'], ['на_взничь', 'слитно'], ['на_взрыд', 'слитно'], ['на_вряд ли', 'слитно'], ['на_всегда', 'слитно'], ['на_встречу', 'слитно'], ['на_выворот', 'слитно'], ['на_выкат', 'слитно'], ['на_вылет', 'слитно'], ['на_вынос', 'слитно'], ['на_выпуск', 'слитно'], ['на_вырез', 'слитно'], ['на_вытяжку', 'слитно'], ['на_глухо', 'слитно'], ['на_голо {«о стрижке»}', 'слитно'], ['на_голову', 'слитно'], ['на_готове', 'слитно'], ['на_двое', 'слитно'], ['на_голову', 'слитно'], ['на_едине', 'слитно'], ['на_завтра', 'слитно'], ['на_зад', 'слитно'], ['на_зади', 'слитно'], ['на_земь', 'слитно'], ['на_зло', 'слитно'], ['на_зубок {выучить назубок}', 'слитно'], ['подарить на_зубок', 'раздельно'], ['на_изготове', 'слитно'], ['на_изнанку', 'слитно'], ['на_изусть', 'слитно'], ['на_искосок', 'слитно'], ['на_искось', 'слитно'], ['на_кануне', 'слитно'], ['на_конец', 'слитно'], ['на_крепко', 'слитно'], ['на_лево', 'слитно'], ['на_легке', 'слитно'], ['на_лицо', 'слитно'], ['на_медни', 'слитно'], ['на_много', 'слитно'], ['на_оборот', 'слитно'], ['на_обум', 'слитно'], ['на_отмашь', 'слитно'], ['на_отрез', 'слитно'], ['на_перебой', 'слитно'], ['на_перевес', 'слитно'], ['на_перегонки', 'слитно'], ['на_перёд', 'слитно'], ['на_перекор', 'слитно'], ['на_перекрест', 'слитно'], ['на_перерез', 'слитно'], ['на_перерыв', 'слитно'], ['на_перехват', 'слитно'], ['на_перечёт', 'слитно'], ['на_повал', 'слитно'], ['на_показ', 'слитно'], ['на_половину', 'слитно'], ['на_последок', 'слитно'], ['на_право', 'слитно'], ['на_пример', 'слитно'], ['на_прокат', 'слитно'], ['на_пролёт', 'слитно'], ['на_пролом', 'слитно'], ['на_пропалую', 'слитно'], ['на_против', 'слитно'], ['на_прямик', 'слитно'], ['на_равне', 'слитно'], ['на_распашку', 'слитно'], ['на_распев', 'слитно'], ['на_расхват', 'слитно'], ['на_ружу', 'слитно'], ['на_ряду', 'слитно'], ['на_силу', 'слитно'], ['на_сквозь', 'слитно'], ['на_сколько', 'слитно'], ['на_скоро', 'слитно'], ['на_смарку', 'слитно'], ['на_смерть', 'слитно'], ['на_спех', 'слитно'], ['на_стежь', 'слитно'], ['на_столько', 'слитно'], ['на_стороже', 'слитно'], ['на_строго', 'слитно'], ['на_сухо', 'слитно'], ['на_тощак', 'слитно'], ['на_угад', 'слитно'], ['на_удалую', 'слитно'], ['на_удачу', 'слитно'], ['на_утёк', 'слитно'], ['на_утро', 'слитно'], ['на_цело', 'слитно'], ['на_чеку', 'слитно'], ['на_черно', 'слитно'], ['на_чисто', 'слитно'], ['на_чистоту', 'слитно'], ['на_яву', 'слитно'], ['не_вдалеке', 'слитно'], ['не_вдомёк', 'слитно'], ['не_взначай', 'слитно'], ['не_вмоготу', 'слитно'], ['не_вмочь', 'слитно'], ['не_впопад', 'слитно'], ['не_впроворот', 'слитно'], ['не_втерпёж', 'слитно'], ['не_даром', 'слитно'], ['не_задолго', 'слитно'], ['не_зачем', 'слитно'], ['не_кстати', 'слитно'], ['не_надолго {ушёл ненадолго}', 'слитно'], ['не_однократно', 'слитно'], ['не_охота', 'слитно'], ['не_спроста', 'слитно'], ['о_земь', 'слитно'], [' о_тколе', 'слитно'], ['от_нюдь', 'слитно'], ['от_роду {не видел}', 'слитно'], ['пятнадцати лет от_роду', 'раздельно'], ['от_селе', 'слитно'], ['от_сюда', 'слитно'], ['от_того', 'слитно'], ['от_туда', 'слитно'], ['от_части', 'слитно'], ['от_чего', 'слитно'], ['по_ближе', 'слитно'], ['по_близости', 'слитно'], ['по_боку', 'слитно'], ['по_верх', 'слитно'], ['по_взводно', 'слитно'], ['по_всюду', 'слитно'], ['по_давно', 'слитно'], ['по_делом', 'слитно'], ['по_дешевле', 'слитно'], ['по_долгу', 'слитно'], ['по_дольше', 'слитно'], ['по_дряд', 'слитно'], ['по_дчас', 'слитно'], ['по_дчистую', 'слитно'], ['по_завчера', 'слитно'], ['по_зади', 'слитно'], ['по_истине', 'слитно'], ['по_камест', 'слитно'], ['по_маленьку', 'слитно'], ['по_малу', 'слитно'], ['по_многу', 'слитно'], ['по_напрасну', 'слитно'], ['по_наслышке', 'слитно'], ['по_неволе', 'слитно'], ['по_немногу', 'слитно'], ['по_низу', 'слитно'], ['по_ныне', 'слитно'], ['по_одаль', 'слитно'], ['по_одиночке', 'слитно'], ['по_очерёдно', 'слитно'], ['по_парно', 'слитно'], ['по_перёк', 'слитно'], ['по_полам', 'слитно'], ['по_полудни', 'слитно'], ['по_полуночи', 'слитно'], ['по_просту', 'слитно'], ['по_пусту', 'слитно'], ['по_ровну', 'слитно'], ['по_ротно', 'слитно'], ['по_сему', 'слитно'], ['по_скольку', 'слитно'], ['по_слезавтра', 'слитно'], ['по_сотенно', 'слитно'], ['по_среди', 'слитно'], ['по_средине', 'слитно'], ['по_статейно', 'слитно'], ['по_суху', 'слитно'], ['по_тихоньку', 'слитно'], ['по_том', 'слитно'], ['по_тому', 'слитно'], ['по_утру', 'слитно'], ['по_чём', 'слитно'], ['по_чему', 'слитно'], ['по_этому ', 'слитно'], ['тот_час', 'слитно'], ['черес_чур', 'слитно'], ['без_спросу', 'раздельно'], ['без_толку', 'раздельно'], ['без_удержу', 'раздельно'], ['без_умолку', 'раздельно'], ['без_устали', 'раздельно'], ['один_на_один', 'один на один'], ['от_мала_до_велика', 'от мала до велика'], ['в_головах', 'раздельно'], ['в_диковинку', 'раздельно'], ['в_конце_концов', 'в конце концов'], ['в_корне', 'раздельно'], ['в_меру', 'раздельно'], ['в_наклон', 'раздельно'], ['в_насмешку', 'раздельно'], ['в_ногу', 'раздельно'], ['в_обмен', 'раздельно'], ['в_обнимку', 'раздельно'], ['в_обрез', 'раздельно'], ['в_обтяжку', 'раздельно'], ['в_обхват', 'раздельно'], ['в_общем', 'раздельно'], ['во_всеоружии', 'раздельно'], ['во_всеуслышание', 'раздельно'], ['в_одиночку', 'раздельно'], ['во_сто_крат', 'во сто крат'], ['в_открытую', 'раздельно'], ['в_отместку', 'раздельно'], ['в_охапку', 'раздельно'], ['в_прах', 'раздельно'], ['в_противовес', 'раздельно'], ['в_рассрочку', 'раздельно'], ['в_розницу', 'раздельно'], ['в_ряд', 'раздельно'], ['в_сердцах', 'раздельно'], ['в_складчину', 'раздельно'], ['вслед_за_тем', 'вслед за тем'], ['в_срок', 'раздельно'], ['в_старину', 'раздельно'], ['в_сторону', 'раздельно'], ['в_струнку', 'раздельно'], ['в_тиши', 'раздельно'], ['в_три_погибели', 'в три погибели'], ['в_тупик', 'раздельно'], ['в_упор', 'раздельно'], ['до_востребования', 'раздельно'], ['до_зарезу', 'раздельно'], ['до_крайности', 'раздельно'], ['до_неузнаваемости', 'раздельно'], ['до_отвала', 'раздельно'], ['до_отказа', 'раздельно'], ['до_сих_пор', 'до сих пор'], ['до_смерти', 'раздельно'], ['до_упаду', 'раздельно'], ['за_глаза', 'раздельно'], ['за_границей', 'раздельно'], ['за_границу', 'раздельно'], ['за_полночь', 'раздельно'], ['на_авось', 'раздельно'], ['на_бегу', 'раздельно'], ['на_боковую', 'раздельно'], ['на_веки_веков', 'на веки веков'], ['на_веки_вечные', 'на веки вечные'], ['на_вес', 'раздельно'], ['на_весу', 'раздельно'], ['на_вид', 'раздельно'], ['на_виду', 'раздельно'], ['на_вкус', 'раздельно'], ['на_время', 'раздельно'], ['на_выбор', 'раздельно'], ['на_глаз', 'раздельно'], ['на_глазах', 'раздельно'], ['на_глазок', 'раздельно'], ['на_грех', 'раздельно'], ['на_диво', 'раздельно'], ['на_днях', 'раздельно'], ['на_дом', 'раздельно'], ['на_дому', 'раздельно'], ['на_дыбы', 'раздельно'], ['на_зависть', 'раздельно'], ['на_запятки', 'раздельно'], ['на_излёте', 'раздельно'], ['на_измор', 'раздельно'], ['на_износ', 'раздельно'], ['на_исходе', 'раздельно'], ['на_корточках', 'раздельно'], ['на_лад', 'раздельно'], ['на_лету', 'раздельно'], ['на_манер', 'раздельно'], ['на_миг', 'раздельно'], ['на_мировую', 'раздельно'], ['на_нет', 'раздельно'], ['на_отлёте', 'раздельно'], ['на_отлично', 'раздельно'], ['на_ощупь', 'раздельно'], ['на_память', 'раздельно'], ['на_плаву', 'раздельно'], ['на_попятную', 'раздельно'], ['на_поруках', 'раздельно'], ['на_прицел', 'раздельно'], ['на_редкость', 'раздельно'], ['на_руку', 'раздельно'], ['на_скаку', 'раздельно'], ['на_славу', 'раздельно'], ['на_смех', 'раздельно'], ['на_совесть', 'раздельно'], ['на_страже', 'раздельно'], ['на_убой', 'раздельно'], ['на_ура', 'раздельно'], ['на_ходу', 'раздельно'], ['на_хорошо', 'раздельно'], ['на_цыпочках', 'раздельно'], ['на_часах', 'раздельно'], ['на_четвереньках', 'раздельно'], ['не_в_духе', 'не в духе'], ['не_в_зачёт', 'не в зачёт'], ['не_в_меру', 'не в меру'], ['не_в_пример', 'не в пример'], ['не_даром', 'раздельно'], ['не_к_добру', 'не к добру'], ['не_к_успеху', 'не к успеху'], ['не_по_вкусу', 'не по вкусу'], ['не_под_силу', 'не под силу'], ['не_по_зубам', 'не по зубам'], ['не_по_нутру', 'не по нутру'], ['не_по_плечу', 'не по плечу'], ['не_прочь', 'раздельно'], ['не_с_руки', 'не с руки'], ['ни_за_грош', 'ни за грош'], ['нога_в_ногу', 'нога в ногу'], ['по_временам', 'раздельно'], ['под_боком', 'раздельно'], ['под_вечер', 'раздельно'], ['под_гору', 'раздельно'], ['по_дешёвке', 'раздельно'], ['под_исход', 'раздельно'], ['под_конец', 'раздельно'], ['под_ложечкой', 'раздельно'], ['под_мышками', 'раздельно'], ['под_силу', 'раздельно'], ['под_спуд{ом}', 'раздельно'], ['под_стать', 'раздельно'], ['по_двое', 'раздельно'], ['под_шумок', 'раздельно'], ['под_уздцы', 'раздельно'], ['под_уклон', 'раздельно'], ['по_крайней_мере', 'по крайней мере'], ['по_нутру', 'раздельно'], ['по_одному', 'раздельно'], ['по_очереди', 'раздельно'], ['по_преимуществу', 'раздельно'], ['по_совести', 'раздельно'], ['по_трое', 'раздельно'], ['про_себя', 'раздельно'], ['с_боку_на_бок', 'с боку на бок'], ['с_ведома', 'раздельно'], ['с_виду', 'раздельно'], ['с_глазу_на_глаз', 'с глазу на глаз'], ['слово_в_слово', 'слово в слово'], ['слово_за_слово', 'слово за слово'], ['с_маху', 'раздельно'], ['с_налёта', 'раздельно'], ['с_наскока', 'раздельно'], ['с_начала_до_конца', 'с начала до конца'], ['с_разбегу', 'раздельно'], ['с_разгона', 'раздельно'], ['с_размаху', 'раздельно'], ['с_ходу', 'раздельно'], ['с_часу_на_час', 'с часу на час'], ['час_от_часу', 'час от часу']]

tasks_new_common = [task_9,
                [['беспр_кословный', 'е'], ['пр_клонный', 'е'], ['пр_лестный', 'е'], ['пр_небречь', 'е'], ['пр_небрежение', 'е'], ['знаки пр_пинания', 'е'], ['пр_пираться', 'е'], ['пр_пона', 'е'], ['пр_поднести', 'е'], ['пр_пятствие', 'е'], ['пр_рекаться', 'е'], ['пр_рогатива', 'е'], ['пр_возносить', 'е'], ['пр_зидент', 'е'], ['пр_зидиум', 'е'], ['пр_следовать', 'е'], ['пр_тензия', 'е'], ['пр_успеть', 'е'], ['пр_возмочь', 'е'], ['пр_амбула', 'е'], ['пр_одолеть', 'е'], ['пр_стол', 'е'], ['пр_мьера', 'е'], ['пр_взойти', 'е'], ['пр_имущество', 'е'], ['пр_возносить', 'е'], ['пр_зентация', 'е'], ['пр_зентовать', 'е'], ['пр_йскурант', 'е'], ['пр_людия', 'е'], ['пр_миальный', 'е'], ['пр_мьера', 'е'], ['пр_валировать', 'е'], ['пр_парат', 'е'], ['пр_сечь', 'е'], ['пр_смыкаться', 'е'], ['пр_словутый', 'е'], ['пр_небрежительный', 'е'], ['пр_стиж', 'е'], ['пр_тендент', 'е'], ['пр_ткновение', 'е'], ['воспр_пятствовать', 'е'], ['непр_ложная {истина}', 'е'], ['времяпр_провождение', 'е'], ['пр_даваться мечтаниям', 'е'], ['пр_клонять {колени в храме}', 'е'], ['пр_льщать', 'е'], ['пр_подобный', 'е'], ['пр_цедент', 'е'], ['пр_грешение', 'е'], ['беспр_дельный', 'е'], ['беспр_станный', 'е'], ['пр_фектура', 'е'], ['пр_людия', 'е'], ['пр_людно', 'и'], ['пр_баутка', 'и'], ['пр_бор', 'и'], ['пр_вереда', 'и'], ['пр_видение', 'и'], ['пр_вычка', 'и'], ['пр_годный', 'и'], ['пр_дирчивый', 'и'], ['пр_вилегия', 'и'], ['пр_гожий', 'и'], ['пр_страстие', 'и'], ['пр_красы', 'и'], ['пр_верженец', 'и'], ['пр_оритет', 'и'], ['пр_ключение', 'и'], ['пр_скорбный', 'и'], ['пр_тязание', 'и'], ['пр_чудливый', 'и'], ['пр_лежный', 'и'], ['пр_говор', 'и'], ['без пр_крас', 'и'], ['беспр_страстный', 'и'], ['пр_сяга', 'и'], ['пр_митивный', 'и'], ['пр_ветливый', 'и'], ['пр_вивка', 'и'], ['пр_влекательный', 'и'], ['пр_норовиться', 'и'], ['пр_чина', 'и'], ['пр_язнь', 'и'], ['непр_личный', 'и'], ['непр_хотливый', 'и'], ['пр_близительно', 'и'], ['пр_емлемый', 'и'], ['непр_емлемый', 'и'], ['пр_каз', 'и'], ['пр_урочить', 'и'], ['пр_ватный', 'и'], ['непр_ступная {крепость}', 'и'], ['супер_яхта', 'ъ'], ['из_ян', 'ъ'], ['ин_екция', 'ъ'], ['под_есаул', 'ъ'], ['ад_ютант', 'ъ'], ['неот_емлемый', 'ъ'], ['аб_юрация', 'ъ'], ['диз_юнкция', 'ъ'], ['кон_юнктивит', 'ъ'], ['кон_ектура', 'ъ'], ['пан_европейский', 'ъ'], ['транс_европейский', 'ъ'], ['фельд_егерь', 'ъ'], ['под_ячий', 'ь'], ['п_едестал', 'ь'], ['ар_ергард', 'ь'], ['порт_ера', 'ь'], ['пр_бывать {находиться}', 'е'], ['пр_бывать {пр_езжать}', 'и'], ['пр_емник {наследник}', 'е'], ['пр_емник {радиоаппарат}', 'и'], ['пр_зирать {ненавидеть}', 'е'], ['пр_зирать {заботиться}', 'и'], ['пр_ступить {нарушить}', 'е'], ['пр_ступить {начать}', 'и'], ['пр_творить {осуществить}', 'е'], ['пр_творить {закрыть}', 'и'], ['пр_дать {изменить}', 'е'], ['пр_дать {добавить усилить}', 'и'], ['пр_дел {конец}', 'е'], ['пр_дел {пр_стройка}', 'и'], ['пр_ходящее {временное}', 'е'], ['пр_ходящий {тот кто пр_ходит}', 'и'], ['пр_клоняться {уважать}', 'е'], ['приклоняться {наклониться}', 'я'], ['пр_вратный {неправильно истолковали}', 'е'], ['пр_вратник {тот который охраняет ворота}', 'и'], ['непр_ложный {тот который нельзя переделать}', 'е'], ['пр_ложение {добавление}', 'и'], ['пр_терпеть {ся} {пр_выкнуть}', 'и'], ['пр_терпеть {пережить}', 'е']],
                task_11,
                [['брезж_щий', 'у'], ['внемл_щий', 'ю'], ['всклокоч_нный', 'е'], ['выровн_нный', 'е'], ['движ_мый', 'и'], ['муч_мый', 'и'], ['дремл_щий', 'ю'], ['кле_щий', 'я'], ['колебл_щийся', 'ю'], ['колыш_щийся', 'у'], ['мел_щий {кофе}', 'ю'], ['обрыз_нный', 'е'], ['незыбл_мый', 'е'], ['немысл_мый', 'и'], ['неотъемл_мый', 'е'], ['тащ_щий', 'а'], ['приемл_мый', 'е'], ['стел_щий {стелить}', 'ю'], ['пыш_щий {здоровьем}', 'у']],
                task_13,
                task_14,
                [['назва_ый брат', 'н'], ['посаже_ый отец', 'н'], ['смышле_ый ребенок', 'н'], ['прида_ое невесты', 'н'], ['проще_ое воскресенье', 'н'], ['конче_ый человек', 'н'], ['варе_ик', 'н'], ['труже_ик', 'н'], ['муче_ик', 'н'], ['масле_ица', 'н'], ['гости_ый', 'н'], ['подли_ый', 'нн'], ['недюжи_ый', 'нн'], ['преда_ый', 'нн'], ['исти_ый', 'нн'], ['ветря_ая мельница', 'н'], ['ветре_ый человек', 'н'], ['ветре_о', 'н'], ['безветре_ый день', 'нн'], ['поисти_е', 'н'], ['нежда_ый', 'нн'], ['нечая_ый', 'нн'], ['неожида_ый', 'нн'], ['медле_ый', 'нн'], ['жела_ый', 'нн'], ['виде_ый', 'нн'], ['нежда_ый', 'нн'], ['негада_ый', 'нн'], ['невида_ый', 'нн'], ['неслыха_ый', 'нн'], ['жема_ый', 'нн'], ['свяще_ый', 'нн'], ['обеща_ый', 'нн'], ['отчая_ый', 'нн'], ['чека_ый', 'нн']],
                [['Образование Древнерусского государства', 'IX'], ['«Призвание варягов» на Русь', '862'], ['Княжение Рюрика в Новгороде', '862–879'], ['Княжение Олега в Киеве', '879–912'], ['Объединение Новгорода и Киева в единое государство при князе Олеге', '882'], ['Походы Олега на Царьград. Договоры с греками', '907, 911'], ['Княжение Игоря в Киеве', '912–945'], ['Восстание древлян', '945'], ['Правление княгини Ольги в малолетстве ее сына князя Святослава', '945–962'], ['Крещение княгини Ольги в Константинополе', '957'], ['Княжение Святослава Игоревича', '962–972'], ['Военные походы князя Святослава', '964–972'], ['Княжение Владимира I Святославича Святого', '980–1015'], ['Принятие христианства на Руси', '988'], ['Княжение Ярослава Мудрого', '1019–1054'], ['Начало строительства храма С Софии в Киеве', '1037'], ['Начало строительства храма С Софии в Новгороде Великом', '1045'], ['Окончательное оформление «Русской Правды» {«Правда Ярославичей»}', '1072'], ['Съезд князей в Любече. Закрепление раздробленности Древнерусского государства', '1097'], ['Великое княжение Владимира Мономаха', '1113–1125'], ['Княжение Юрия Владимировича Долгорукого во Владимире', '1125–1157'], ['Установление республики в Новгороде', '1136'], ['Первое упоминание о Москве в летописи', '1147'], ['Княжение Андрея Юрьевича Боголюбского', '1157–1174'], ['Постройка храма Покрова на Нерли', '1165'], ['Поход князя Игоря Новгород Северского на половце «Слово о полку Игореве»', '1185'], ['Объединение Волынского и Галицкого княжес', '1199'], ['Образование Ордена меченосц', '1202'], ['Битва на реке Калке', '1223, 31 мая.'], ['Нашествие монголо татар во главе с ханом Батыем на Русь', '1237–1240'], ['Объединение Тевтонского ордена с Орденом меченосце Образование Ливонского ордена', '1237'], ['Битва на реке Сити', '1238, 4 марта.'], ['Невская битва. Разгром князем Александром Ярославичем шведских рыцарей на реке Неве. Прозван Невским', '1240, 15 июля.'], ['Разгром монголо-татарами Киева', '1240'], ['Ледовое побоище. Разгром князем Александром Ярославичем Невским крестоносцев на Чудском озере', '1242, 5 апреля.'], ['Образование государства Золотая Орда', '1243'], ['Княжение Александра Невского на великокняжеском владимирском престоле', '1252–1263'], ['Распад Галицко Волынского княжества под ударами Орды', '1264'], ['1276 – Образование самостоятельного Московского княжества', '1276 – Образование самостоятельного Московского княжества'], ['Правление князя Ивана Калиты в Москве', '1325–1340'], ['Перенесение резиденции главы Русской православной церкви–митрополита–из Владимира в Москву, превращение Москвы в общерусский религиозный центр', '1326'], ['Восстание в Твери против золотоордынц', '1327'], ['Правление князя {с 1362 –великого князя} Дмитрия Ивановича {после 1380 –Донского} в Москве', '1359–1389'], ['Жизнь и деятельность Андрея Рублева', '1360–1430'], ['Битва на реке Воже', '1378'], ['Куликовская битва', '1380, 8 сентября.'], ['Разгром Москвы Тохтамышем', '1382'], ['Княжение Василия I Дмитриевича', '1389–1425'], ['Грюнвальдская битва. Разгром Тевтонского ордена', '1410, 15 июля.'], ['Династическая война между сыновьями и внуками Дмитрия Донского', '1425–1453'], ['Флорентийская церковная уния об объединении католической и православной церквей под главенством Папы Римского. Акт об унии подписан русским митрополитом Исидором, за что он был низложен', '1439'], ['Избрание епископа Рязанского Ионы митрополитом Русской православной церкви и вся Руси. Установление автокефалии {самостоятельности} Русской православной церкви от Византии', '1448'], ['Падение Византийской империи', '1453'], ['Княжение Ивана III', '1462–1505'], ['Присоединение к Москве Ярославля', '1463'], ['Путешествие Афанасия Никитина в Индию', '1469–1472'], ['Сражение на реке Шелони московских и новгородских войск', '1471'], ['Присоединение Новгорода Великого к Москве', '1478'], ['«Стояние на реке Угре». Ликвидация ордынского ига', '1480'], ['Строительство нынешнего Московского Кремля. Сооружение соборов и Грановитой палаты, кирпичных стен', '1484–1508'], ['Присоединение Твери к Москве', '1485'], ['Составление «Судебника» Ивана III. Установление единых норм уголовной ответственности и судебно процессуальных норм для всей страны, ограничение права крестьянского перехода от одного феодала к другому – неделя до и неделя после 26 ноября {Юрьева дня осеннего}. Конец XV – начало XVI  – Завершение процесса складывания Российского централизованного государства', '1497'], ['Полемика между Нилом Сорским {лидером нестяжателей, проповедовавших отказ церкви от всякого имущества} и игуменом Иосифом Волоцким {лидером стяжателей, сторонника сохранения церковного землевладения}. Осуждение взглядов нестяжателей на церковном Cоборе', '1503'], ['Присоединение к Москве Юго Западных русских земель', '1503'], ['Правление Василия III', '1505–1533'], ['Присоединение Пскова к Москве', '1510'], ['Присоединение Смоленска к Москве', '1514'], ['Присоединение Рязани к Москве', '1521'], ['Правление великого князя Ивана IV Грозного', '1533–1584'], ['Венчание Ивана IV Грозного на царство', '1547'], ['Начало созыва Земских собор', '1549'], ['Принятие «Судебника» Ивана IV Грозного', '1550'], ['«Стоглавый собор» Русской православной церкви', '1551'], ['Присоединение Казани к Москве', '1552'], ['Строительство Покровского собора в Москве {храма Василия Блаженного}', '1555–1560'], ['Присоединение Астрахани к Москве', '1556'], ['Принятие «Уложения о службе»', '1556'], ['Ливонская война', '1558–1583'], ['Разгром Ливонского ордена', '1561'], ['Начало книгопечатания на Руси. Издание Иваном Федоровым «Апостола»–первой печатной книги, имеющей установленную дату', '1564'], ['Опричнина Ивана IV Грозного', '1565–1572'], ['Заключение Люблинской унии об объединении Польши с Великим княжеством Литовским в одно государство–Речь Посполитую', '1569'], ['Первое упоминание о «заповедных летах»', '1581'], ['Поход Ермака в Сибирь', '1581'], ['Подписание Ям Запольского перемирия России с Речью Посполитой', '1582'], ['Заключение Плюсского перемирия со Швецией', '1583'], ['Царствование Федора Иоанновича', '1584–1598'], ['Учреждение патриаршества на Руси. Патриарх И', '1589'], ['Указ об «урочных летах» {пятилетнем сроке сыска беглых крестьян}', '1597'], ['Правление Бориса Годунова', '1598–1605'], ['Восстание крестьян и холопов под предводительством Хлопка', '1603'], ['1605–1606 –Правление Лжедмитрия I', '1605–1606 –Правление Лжедмитрия I'], ['Восстание крестьян под предводительством Ивана Болотникова', '1606–1607'], ['Правление царя Василия Шуйского', '1606–1610'], ['Попытка Лжедмитрия II захватить власть в России. Существование «Тушинского лагеря»', '1607–1610'], ['Оборона Смоленска', '1609–1611'], ['«Семибоярщина»', '1610–1613'], ['Первое ополчение против польских войск во главе с П. Ляпуновым', '1611, март – июнь.'], ['Второе ополчение под руководством Д. Пожарского и К. Минина', '1612'], ['Освобождение Москвы от польских интервентов Вторым ополчением', '1612, 26 октября.'], ['Избрание Земским собором Михаила Романова на царство. Начало династии Романовых. 1613–1645 –Царствование Михаила Федоровича Романова', '1613'], ['Заключение Столбовского «вечного мира» со Швецией', '1617'], ['Деулинское перемирие с Польшей', '1618'], ['Смоленская война между Россией и Речью Посполитой', '1632–1634'], ['Правление царя Алексея Михайловича', '1645–1676'], ['Экспедиция Семена Дежнева по реке Колыме и Ледовитому океану', '1648'], ['Начало восстания Богдана Хмельницкого на Украине', '1648'], ['«Соляной бунт» в Москве', '1648'], ['Восстания в различных городах России', '1648–1650'], ['Принятие Земским собором нового свода законов–«Соборного уложения» царя Алексея Михайловича. Окончательное закрепощение крестьян', '1649'], ['Реформа патриарха Никона. Начало церковного раскола', '1653–1656'], ['Переяславская рада. Воссоединение Украины с Россией', '1654, 8 января.'], ['Война России с Речью Посполитой за Украину', '1654–1667'], ['«Медный бунт» в Москве', '1662'], ['Заключение Андрусовского перемирия между Россией и Речью Посполитной', '1667'], ['Введение Новоторгового устава', '1667'], ['Крестьянская война под предводительством Степана Разина', '1667–1671'], ['Рождение Петра I', '1672, 30 мая.'], ['Правление Федора Алексеевича', '1676–1682'], ['Отмена местничества', '1682'], ['Стрелецкие восстания в Москве', '1682, 1698'], ['Царствование Петра I {1682–1689 –при регентстве Софьи, до 1696 –совместно с Иваном V}', '1682–1725'], ['«Вечный мир» с Польшей', '1686'], ['Открытие Славяно греко латинской академии', '1687'], ['Походы Петра I на Аз', '1695, 1696'], ['«Великое посольство»', '1697–1698'], ['Северная война', '1700–1721'], ['Основание Санкт Петербурга', '1703, 16 мая.'], ['Крестьянское восстание под предводительством К. Булавина', '1707–1708'], ['Битва при деревни Лесной', '1708, 28 сентября.'], ['Полтавская битва', '1709, 27 июня.'], ['Прутский поход', '1710–1711'], ['Учреждение Сената', '1711'], ['Жизнь и деятельность М. В. Ломоносова', '1711–1765'], ['Указ о единонаследии {отменен в 1731 }', '1714'], ['Сражение при мысе Гангут', '1714, 27 июля.'], ['Учреждение коллегий', '1718–1721'], ['Сражение у острова Гренгам', '1720'], ['Ништадтский мир со Швецией', '1721'], ['Провозглашение Петра I императором. Россия стала империей', '1721'], ['Принятие «Табели о рангах»', '1722'], ['Подписание указа о наследии престола', '1722'], ['Каспийский поход', '1722–1723'], ['Открытие Академии наук в Санкт Петербурге', '1725'], ['Правление Екатерины I', '1725–1727'], ['Правление Петра II', '1727–1730'], ['Правление Анны Иоанновны. «Бироновщина»', '1730–1740'], ['Правление Елизаветы Петровны', '1741–1761'], ['Открытие Московского университета', '1755, 25 января.'], ['Семилетняя война', '1756–1763'], ['Основание в Санкт Петербурге Академии художес', '1757'], ['Правление Петра III', '1761–1762'], ['«Манифест о вольности дворянской»', '1762'], ['Правление Екатерины II', '1762–1796'], ['Русско турецкая война', '1768–1774'], ['Победа русского флота над турецким в битве при Чесме и русских сухопутных сил над турецкой армией в сражениях у рек Ларга и Кагул', '1770'], ['Заключение Кючук Кайнарджийского мира по итогам русско турецкой войны. Крымское ханство переходило под протекторат России. Россия получала территорию Причерноморья между Днепром и Южным Бугом, крепости Азов, Керчь, Кинбурн, право свободного прохода российских торговых кораблей через черноморские проливы', '1774'], ['Разделы Польши между Пруссией, Австрией и Россией. К России отошли территории Правобережной Украины, Белоруссии, часть Прибалтики и Польши', '1772, 1793, 1795'], ['Жизнь и деятельность М. М. Сперанского', '1772–1839'], ['Крестьянская война под предводительством Емельяна Пугачева', '1773–1775'], ['Проведение губернской реформы в Российской империи', '1775'], ['Открытие памятника Петру I «Медный всадник» {Э. Фальконе}', '1782'], ['Вхождение Крыма в состав Российской империи. Георгиевский трактат. Переход Восточной Грузии под протекторат России', '1783'], ['Издание жалованных грамот дворянству и городам', '1785'], ['Русско турецкая война', '1787–1791'], ['Победы русских войск под командованием А. В. Суворова при Фокшанах и Рымнике', '1789'], ['Победа русского флота над турецким в сражении при мысе Калиакрия', '1790'], ['Выход в свет книги А. Н. Радищева «Путешествие из Петербурга в Москву»', '1790'], ['Взятие русскими войсками под командованием А. В. Суворова турецкой крепости Измаил на Дунае', '1790'], ['Заключение Ясского мира по итогам русско турецкой войны. Подтверждалось присоединение к России Крыма и Кубани, территории Причерноморья между Южным Бугом и Днестром', '1791'], ['Восстание в Польше под предводительством Тадеуша Костюшко', '1794'], ['Правление Павла I', '1796–1801'], ['Отмена установленного Петром I порядка престолонаследия. Восстановление порядка наследования престола по праву первородства по мужской линии', '1797'], ['Издание Павлом I манифеста о трехдневной барщине', '1797'], ['Итальянский и Швейцарский походы А. В. Суворова', '1799'], ['Правление Александра I', '1801–1825'], ['Учреждение министерств вместо коллегий', '1802'], ['Указ о «вольных хлебопашцах»', '1803'], ['Принятие устава, вводившего автономию университет', '1803'], ['Первая русская кругосветная экспедиция под руководством И. Ф. Крузенштерна и Ю. Ф. Лисянского', '1803–1804'], ['Русско иранская война. Окончилась Гюлистанским миром', '1804–1813'], ['Участие России в III и IV антинаполеоновских коалициях', '1805–1807'], ['Поражение русских и австрийских войск в сражении при Аустерлице', '1805, декабрь.'], ['Русско турецкая война', '1806–1812'], ['Поражение русской армии под Фридландом', '1807'], ['Заключение Тильзитского мира между Александром I и Наполеоном Бонапартом {присоединение России к континентальной блокаде Англии, согласие России на создание вассального Франции Герцогства Варшавского}', '1807'], ['Русско шведская война. Присоединение Финляндии к Российской империи', '1808–1809'], ['Создание Государственного совета по инициативе М. М. Сперанского', '1810'], ['декабрь.:Отечественная война с Наполеоном', '1812, июнь'], ['Заключение Бухарестского мира по итогам русско турецкой войны', '1812'], ['Бородинская битва', '1812, 26 августа.'], ['Заграничные походы русской армии', '1813–1814'], ['«Битва народов» при Лейпциге', '1813'], ['Заключение Гюлистанского мира по итогам русско иранской войны', '1813'], ['Венский конгресс европейских государст Решение вопросов устройства Европы после Наполеоновских войн. Присоединение к России Герцогства Варшавского {Царства Польского}', '1814–1815'], ['Создание «Священного союза»', '1815'], ['Дарование Александром I Царству Польскому Конституции', '1815'], ['Начало массового создания военных поселений по инициативе А. А. Аракчеева', '1816'], ['Деятельность «Союза спасения»', '1816–1817'], ['Кавказская война', '1817–1864'], ['Деятельность «Союза благоденствия»', '1818–1821'], ['Открытие Антарктиды российскими мореплавателями под командованием Ф. Ф. Беллинсгаузена и М. П. Лазарева.', '1820'], ['Образование Северного и Южного обществ декабрист', '1821–1822'], ['Жизнь и деятельность Ф. М. Достоевского', '1821–1881'], ['Восстание декабристов на Сенатской площади в Петербурге', '1825, 14 декабря.'], ['Восстание Черниговского полка', '1825, 29 декабря–1826, 3 января.'], ['Правление Николая I', '1825–1855'], ['Русско иранская война', '1826–1828'], ['Заключение Туркманчайского мира по итогам русско иранской войны. Гибель А. С. Грибоедова', '1828'], ['Русско турецкая война', '1828–1829'], ['Заключение Адрианопольского мира по итогам русско турецкой войны', '1829'], ['Деятельность кружка Н. В. Станкевича', '1831–1839'], ['Открытие первой железной дороги Петербург–Царское Село', '1837'], ['Проведение П.Д Киселевым реформы управления государственными крестьянами', '1837–1841'], ['Споры между славянофилами и западниками', '1840–1850-е'], ['Денежная реформа Е. Ф. Канкрина', '1839–1843'], ['Жизнь и деятельность П. И. Чайковского', '1840–1893'], ['Деятельность кружка М. В. Буташевича– Петрашевского', '1844–1849'], ['Открытие железной дороги Москва – Санкт Петербу', '1851'], ['Крымская война', '1853–1856'], ['Сражение при Синопе', '1853, ноябрь.'], ['Правление Александра II', '1855–1881'], ['Парижский конгресс', '1856'], ['Основание П. М. Третьяковым коллекции русского искусства в Москве', '1856'], ['Айгунский и Пекинский договоры с Китаем', '1858, 1860'], ['Отмена крепостного права в России', '1861, 19 февраля.'], ['Деятельность организации «Земля и воля»', '1861–1864'], ['Образование «Могучей кучки»:объединения композиторов {М. А. Балакирев, Ц. А. Кюи, М. П. Мусоргский, Н. А. Римский Корсаков, А. П. Бородин}', '1862'], ['Земская, судебная и школьная реформы', '1864'], ['Присоединение Средней Азии к Российской империи', '1864–1885'], ['Продажа Аляски США', '1867'], ['Открытие Д. И. Менделеевым Периодического закона химических элемент', '1869'], ['Реформа городского самоуправления', '1870'], ['Деятельность «Товарищества передвижных художественных выставок»', '1870–1923'], ['Создание «Союза трех императоров»', '1873'], ['Проведение военной реформы – введение всеобщей воинской обязанности', '1874'], ['Осуществление народниками «хождений в народ»', '1874, 1876'], ['Деятельность новой организации «Земля и воля»', '1876–1879'], ['Русско турецкая война', '1877–1878'], ['Сан-Стефанский мирный договор', '1878'], ['Берлинский конгресс', '1878'], ['Раскол организации «Земля и воля». Возникновение организаций «Народная воля» и «Черный передел»', '1879'], ['Деятельность организации «Народная воля»', '1879–1881'], ['Оформление Тройственного союза', '1879–1882'], ['Убийство народовольцами Александра II', '1881, 1 марта.'], ['Правление Александра III', '1881–1894'], ['Отмена временнообязанного положения крестьян. Перевод крестьян на обязательный выкуп', '1882'], ['Деятельность группы «Освобождение труда»', '1883–1903'], ['Стачка на Никольской мануфактуре Т. С. Морозова в Орехово Зуеве {Морозовская стачка}', '1885'], ['Принятие циркуляра «о кухаркиных детях»', '1887'], ['Принятие «Положения о земских начальниках»', '1889'], ['Оформление франко русского союза', '1891–1893'], ['Строительство Транссибирской железнодорожной магистрали', '1891–1905'], ['Передача П. М. Третьяковым своей коллекции русского искусства в дар городу Москве', '1892'], ['Правление Николая II', '1894–1917'], ['Изобретение А. С. Поповым радиосвязи', '1895'], ['Создание «Союза борьбы за освобождение рабочего класса»', '1895'], ['Первая всеобщая перепись населения России', '1897'], ['Денежная реформа С. Ю. Витте', '1897'], ['I съезд РСДРП', '1898'], ['Гаагская мирная конференция 26 держав по проблемам разоружения, созванная по инициативе России. Россия в XX', '1899'], ['Создание партии социалистов-революционеров {эсеров} в результате объединения неонароднических кружк', '1901–1902'], ['II съезд РСДРП. Создание партии', '1903'], ['Создание «Союза земцев конституционалистов»', '1903'], ['Русско японская война', '1904–1905'], ['Сражение под городом Ляоян', '1904, август.'], ['Сражение на реке Шахэ', '1904, сентябрь.'], ['«Кровавое воскресенье». Начало первой российской революции', '1905, 9 января.'], ['Первая российская революция', '1905–1907'], ['Поражение русской армии под городом Мукденом', '1905, февраль.'], ['Гибель русского флота возле острова Цусима', '1905, май.'], ['Восстание на броненосце «Князь Потемкин-Таврический»', '1905, июнь.'], ['Заключение Портсмутского мирного договора по итогам русско японской войны. Россия уступала Японии южную часть Сахалина, арендные права на Ляодунский полуостров и Южно Маньчжурскую железную дорогу', '1905, август.'], ['Издание Манифеста «Об усовершенствовании государственного порядка»', '1905, 17 октября.'], ['Создание «Союза русского народа»', '1905, ноябрь.'], ['Вооруженное восстание в Москве и ряде других город', '1905, декабрь.'], ['Деятельность I Государственной думы', '1906, апрель – июль.'], ['Указ о выходе крестьян из общины. Начало проведения столыпинской аграрной реформы', '1906, 9 ноября.'], ['Деятельность II Государственной думы', '1907, февраль – июнь.'], ['Роспуск II Государственной думы. Принятие нового избирательного закона {третьеиюньский переворот}', '1907, 3 июня.'], ['Деятельность III Государственной думы', '1907–1912'], ['Русско английское соглашение о разграничении зон влияния в Иране, Афганистане и Тибете. Окончательное оформление союза «Антанта»', '1907, август'], ['Ленский расстрел', '1912'], ['Деятельность IV Государственной думы', '1912–1917'], ['Первая мировая война', '1914, 1 августа – 1918, 9 ноября.']]]
async def stats(message: Message):
    conn = sqlite3.connect('stats.db')
    cur = conn.cursor()
    sqlite_select_query = f"""SELECT rights from Stats where user_id = {message.chat.id}"""
    cur.execute(sqlite_select_query)
    right = str(cur.fetchall()[0])
    sqlite_select_query = f"""SELECT wrongs from Stats where user_id = {message.chat.id}"""
    cur.execute(sqlite_select_query)
    wrong = str(cur.fetchall()[0])
    right = right.replace('(', '')
    right = right.replace(')', '')
    right = right.replace("'", '')
    right = right.replace(',', '')
    wrong = wrong.replace('(', '')
    wrong = wrong.replace(')', '')
    wrong = wrong.replace("'", '')
    wrong = wrong.replace(',', '')
    cor = int(right)
    uncor = int(wrong)
    cur.close()
    conn.close()
    if (cor + uncor == 0):
        await message.answer(
            "Ты пока не выполнил ни одного задания :(",
            reply_markup=keyboard.start_kb
        )
    else:
        await message.answer(
            f'Ты сделал верно {cor} из {cor + uncor} заданий ({math.ceil(cor / (cor + uncor) * 100)}%). Что-то ещё?',
            reply_markup=keyboard.start_kb
        )

async def get_stats(chat_id):
    conn = sqlite3.connect('stats.db')
    cur = conn.cursor()
    cur.execute(f'SELECT COUNT (*) from Stats where user_id = {chat_id}')
    tmp = str(cur.fetchall()[0])
    tmp = tmp.replace('(', '')
    tmp = tmp.replace(')', '')
    tmp = tmp.replace("'", '')
    tmp = tmp.replace(',', '')
    cnt = int(tmp)
    if (cnt == 0):
        cur.execute('INSERT INTO Stats (user_id, rights, wrongs) VALUES (?, ?, ?)',
                    (chat_id, 0, 0))
    conn.commit()
    cur.close()
    conn.close()

async def update_stats_rights(chat_id):
    conn = sqlite3.connect('stats.db')
    cur = conn.cursor()
    sqlite_select_query = f"""UPDATE Stats SET rights = rights + 1 where user_id = {chat_id}"""
    cur.execute(sqlite_select_query)
    conn.commit()
    cur.close()
    conn.close()

async def update_stats_wrongs(chat_id):
    conn = sqlite3.connect('stats.db')
    cur = conn.cursor()
    sqlite_select_query = f"""UPDATE Stats SET wrongs = wrongs + 1 where user_id = {chat_id}"""
    cur.execute(sqlite_select_query)
    conn.commit()
    cur.close()
    conn.close()

async def get_task(chat_id, task_id):
    conn = sqlite3.connect('tasks.db')
    cur = conn.cursor()
    sqlite_select_query = f"""SELECT * from Tasks where user_id = {chat_id}"""
    cur.execute(sqlite_select_query)
    list_of_words = cur.fetchall()
    cur.close()
    conn.close()

async def get_task_words(chat_id, task_id):
    conn = sqlite3.connect('training.db')
    cur = conn.cursor()

    sqlite_select_query = f"""SELECT rights from Training where user_id = {chat_id}"""
    cur.execute(sqlite_select_query)
    rights = cur.fetchall()

    sqlite_select_query = f"""SELECT wrongs from Training where user_id = {chat_id}"""
    cur.execute(sqlite_select_query)
    wrongs = cur.fetchall()

    cur.close()
    conn.close()

    v = []
    for i in range(len(rights)):
        s1 = str(rights[i])
        s2 = str(wrongs[i])
        s1 = s1.replace('(', '')
        s1 = s1.replace(')', '')
        s1 = s1.replace("'", '')
        s2 = s2.replace('(', '')
        s2 = s2.replace(')', '')
        s2 = s2.replace("'", '')

        if (task_id != 4):
            s1 = s1.replace(',', '')
            s2 = s2.replace(',', '')
        else:
            if (s1[-1] == ','):
                s1 = s1[:-1:]
            if (s2[-1] == ','):
                s2 = s2[:-1:]
        v.append([s2, s1])

    return v

async def get_task_training(chat_id, task_id):
    conn = sqlite3.connect('tasks.db')
    cur = conn.cursor()
    sqlite_select_query = f"""SELECT words from Tasks where (user_id = {chat_id} and task_id = {task_id})"""
    cur.execute(sqlite_select_query)
    list_of_words = cur.fetchall()
    sqlite_select_query = f"""SELECT answers from Tasks where (user_id = {chat_id} and task_id = {task_id})"""
    cur.execute(sqlite_select_query)
    list_of_answers = cur.fetchall()
    cur.close()
    conn.close()

async def add_task(chat_id, task_id, a, b):
    conn = sqlite3.connect('tasks.db')
    cur = conn.cursor()
    cur.execute('INSERT INTO Tasks (user_id, task_id, words, answers) VALUES (?, ?, ?, ?)',
                (chat_id, task_id, a, b))
    conn.commit()
    cur.close()
    conn.close()

async def del_training(chat_id):
    conn = sqlite3.connect('training.db')
    cur = conn.cursor()

    sqlite_select_query = f"""DELETE from Training where (user_id = {chat_id})"""
    cur.execute(sqlite_select_query)

    conn.commit()
    cur.close()
    conn.close()


task_words = []

@router.message(Base.exercise)
async def start_training(message: Message, state: FSMContext):
    data = await state.get_data()
    chat_id = int(data['key'])
    task_id = int(data['task_id'])
    step = int(data['step'])
    #flag_trainig = bool(data['flag_training'])
    answer_true = int(data['answer_true'])
    answer_false = int(data['answer_false'])

    #global task_id         +
    #global step            +
    #global flag_trainig    +
    #global list_of_words   +
    #global list_of_answers +
    if (step == 0):
        if (message.text.isdigit()):
            await state.update_data(task_id=message.text)

            await state.update_data(flag_training=True)
            #flag_trainig = True  +

            data = await state.get_data()
            task_id = int(data['task_id'])
            chat_id = int(data['key'])

            list_of_answers = []
            list_of_words = []

        else:
            await message.answer(
                f'Укажи номер задания'
            )
    #print((await state.get_data())['flag_training'])
    if ((await state.get_data())['flag_training'] == True or step != 0):
        try:
            #global answer_true   -+
            #global answer_false  -+

            task_words = list(await get_task_words(int((await state.get_data())['key']), int((await state.get_data())['task_id'])))
            #global task_words    +

            if (step == 0):
                if (message.text.lower() == "стоп" or message.text.strip() == "Стоп"):

                    await state.update_data(step=0)
                    await state.update_data(task_id=0)
                    await del_training(int((await state.get_data())['key']))
                    # step = 0         +
                    # task_id = 0      +
                    # task_words = []  +

                    markup = keyboard.start_kb
                    await message.answer(
                        f'Ты сделал верно {int((await state.get_data())["answer_true"])} из {int((await state.get_data())["answer_true"]) + int((await state.get_data())["answer_false"])} заданий. Что-то ещё?',
                        reply_markup=markup)

                    await state.update_data(answer_true=0)
                    await state.update_data(answer_false=0)
                    await state.update_data(flag_trainig=False)
                    # answer_true = 0      +
                    # answer_false = 0     +
                    # flag_trainig = False +

                    await state.set_state(Base.mode)
                else:
                    #lock = threading.Lock()
                    if (int((await state.get_data())['task_id']) == 4):
                        task_words = task_4
                    else:
                        #await get_task_training(message.chat.id)
                        conn = sqlite3.connect('tasks.db')
                        cur = conn.cursor()

                        sqlite_select_query = f"""SELECT words from Tasks where (user_id = {(await state.get_data())['key']} and task_id = {(await state.get_data())['task_id']})"""
                        cur.execute(sqlite_select_query)
                        list_of_words = cur.fetchall()
                        sqlite_select_query = f"""SELECT answers from Tasks where (user_id = {(await state.get_data())['key']} and task_id = {(await state.get_data())['task_id']})"""
                        cur.execute(sqlite_select_query)
                        list_of_answers = cur.fetchall()
                        cur.close()
                        conn.close()

                        for i in range(len(list_of_words)):
                            s1 = str(list_of_words[i])
                            s2 = str(list_of_answers[i])
                            if (int((await state.get_data())['task_id']) not in [52]):
                                s1 = s1.replace('(', '')
                                s1 = s1.replace(')', '')
                                s1 = s1.replace("'", '')

                                s2 = s2.replace('(', '')
                                s2 = s2.replace(')', '')
                                s2 = s2.replace("'", '')
                                if (int((await state.get_data())['task_id']) != 4):
                                    s1 = s1.replace(',', '')
                                    s2 = s2.replace(',', '')
                                else:
                                    if (s1[-1] == ','):
                                        s1 = s1[:-1:]
                                    if (s2[-1] == ','):
                                        s2 = s2[:-1:]
                            task_words.append([s1, s2])
                        if (int((await state.get_data())['task_id']) <= 16):
                            task_words = task_words + tasks_new_common[int((await state.get_data())['task_id']) - 9]

                    random.shuffle(task_words)

                    await del_training(int((await state.get_data())['key']))

                    conn = sqlite3.connect('training.db')
                    cur = conn.cursor()
                    for x, y in task_words:
                        cur.execute('INSERT INTO Training (user_id, rights, wrongs) VALUES (?, ?, ?)',
                                    (int((await state.get_data())['key']), str(y), str(x)))
                    conn.commit()
                    cur.close()
                    conn.close()

                    markup = keyboard.stop_kb
                    if (len(task_words) == 0):
                        await message.answer("Список пуст")
                        await state.update_data(step=0)
                        await state.update_data(task_id=0)
                        #step = 0     +
                        #task_id = 0  +

                        markup = keyboard.start_kb
                        await message.answer("Что-то ещё?",
                                             reply_markup=markup)
                        await state.set_state(Base.mode)
                    else:
                        if (int((await state.get_data())['task_id']) == 4):
                            await message.answer(
                                "Напиши слово целиком, выделив заглавной буквой гласную, на которую падает ударение\nБанты -> <u>Б</u>Анты или <u>б</u>Анты", parse_mode=ParseMode.HTML)
                        elif (int((await state.get_data())['task_id']) == 15):
                            await message.answer(
                                "В зависимости от ответа напиши 'н' или 'нн'\nИско_и -> <u>Н</u>н или <u>н</u>н",
                                parse_mode=ParseMode.HTML)
                        elif (int((await state.get_data())['task_id']) == 14):
                            await message.answer(
                                "Если есть подсказка на клавиатуре, то нажми на правильный вариант, иначе напиши словосочетание сам, расставляя пробелы, где они нужны\nВо_что_бы_то_ни_стало -> Во что бы то ни стало",
                                parse_mode=ParseMode.HTML)
                        elif (int((await state.get_data())['task_id']) == 13):
                            await message.answer(
                                "Напиши словосочетание сам, расставляя пробелы, где они нужны\nВо_что_бы_то_ни_стало -> Во что бы то ни стало",
                                parse_mode=ParseMode.HTML)
                        else:
                            await message.answer("Напиши букву, которая должна стоять на месте пропуска\nПр_рогатива -> е")

                        if (int((await state.get_data())['task_id']) == 14) and ((str(task_words[step][0])).count('_') == 1):
                            markup = keyboard.task_13_kb
                            await message.answer(task_words[step][0], reply_markup=markup)
                        else:
                            await message.answer(task_words[step][0], reply_markup=markup)
                        #await message.answer(task_words[step][0], reply_markup=markup)
                        data = await state.get_data()
                        curv = data['step']
                        await state.update_data(step=curv+1)
                        #step += 1

                        await state.set_state(Base.exercise)
                    #lock.release()
            elif (step > 0):
                #print(type(task_words))
                #print(task_words)
                #print(type(message.text.strip()))
                if (message.text.lower() == "стоп" or message.text.strip() == "Стоп"):
                    await state.update_data(step=0)
                    await state.update_data(task_id=0)
                    await del_training(int((await state.get_data())['key']))
                    #step = 0         +
                    #task_id = 0      +
                    #task_words = []  +

                    markup = keyboard.start_kb
                    await message.answer(
                        f'Ты сделал верно {int((await state.get_data())["answer_true"])} из {int((await state.get_data())["answer_true"]) + int((await state.get_data())["answer_false"])} заданий. Что-то ещё?',
                        reply_markup=markup)

                    await state.update_data(answer_true=0)
                    await state.update_data(answer_false=0)
                    await state.update_data(flag_training=False)
                    #answer_true = 0       +
                    #answer_false = 0      +
                    #flag_trainig = False  +
                    await state.set_state(Base.mode)
                elif (((int((await state.get_data())['task_id']) not in [4, 13, 14, 15]) and (message.text.strip().lower() == (str(task_words[step - 1][1])).lower())) or
                      ((int((await state.get_data())['task_id']) == 4) and (message.text.strip()[1::] == (task_words[step-1][1][1::]).strip())) or
                      ((int((await state.get_data())['task_id']) in [13, 14, 15]) and (message.text.lower() == task_words[step-1][1]))):
                    await message.answer("Верно!")
                    #lock = threading.Lock()
                    data = await state.get_data()
                    curv = data['answer_true']
                    await state.update_data(answer_true=curv + 1)
                    #answer_true += 1  +
                    #lock.release()

                    await update_stats_rights(message.chat.id)
                    if (step >= len(task_words)):
                        await state.update_data(step=0)
                        #step = 0  +

                        markup = keyboard.start_kb
                        await message.answer(
                            f'Слова закончились. Ты молодец!\n Ты сделал верно {int((await state.get_data())["answer_true"])} из {int((await state.get_data())["answer_true"]) + int((await state.get_data())["answer_false"])} заданий.',
                            reply_markup=markup)

                        await state.update_data(answer_true=0)
                        await state.update_data(answer_false=0)
                        await state.update_data(flag_training=False)
                        await del_training(int((await state.get_data())['key']))
                        # answer_true = 0       +
                        # answer_false = 0      +
                        # flag_trainig = False  +
                        # task_words = []       +

                        await state.set_state(Base.mode)
                    else:
                        if (int((await state.get_data())['task_id']) == 14) and ((str(task_words[step][0])).count('_') == 1):
                            markup = keyboard.task_13_kb
                            await message.answer(task_words[step][0], reply_markup=markup)
                        else:
                            markup = keyboard.stop_kb
                            await message.answer(task_words[step][0], reply_markup=markup)

                        data = await state.get_data()
                        curv = data['step']
                        await state.update_data(step=curv + 1)
                        #step += 1   +

                        await state.set_state(Base.exercise)
                else:
                    # Фишка
                    # answer = req_gptshka(task_4[step-1][1])
                    # answer = subject_selection(message.text)
                    # await message.answer( f'Неверно! \nПравильный ответ: {task_4[step-1][1]} \nПопробуй запомнить так: {answer}')
                    # print(message.text.strip()[1:-1:], task_words[step - 1][1][1:-1:])
                    await message.answer(
                        f'Неверно! \nПравильный ответ: {task_words[step - 1][1]}')

                    data = await state.get_data()
                    curv = data['answer_false']
                    await state.update_data(answer_false=curv + 1)
                    #answer_false += 1   +

                    await update_stats_wrongs(message.chat.id)
                    if (step >= len(task_words)):
                        await state.update_data(step=0)
                        #step = 0   +

                        markup = keyboard.start_kb
                        await message.answer(
                            f'Слова закончились. Ты молодец!\nТы сделал верно {int((await state.get_data())["answer_true"])} из {int((await state.get_data())["answer_true"]) +int((await state.get_data())["answer_false"])} заданий.',
                            reply_markup=markup)

                        await state.update_data(answer_true=0)
                        await state.update_data(answer_false=0)
                        await state.update_data(flag_training=False)
                        await del_training(int((await state.get_data())['key']))
                        #answer_true = 0        +
                        #answer_false = 0       +
                        #flag_trainig = False   +
                        #task_words = []        +

                        await state.set_state(Base.mode)
                    else:
                        if (int((await state.get_data())['task_id']) == 14) and ((str(task_words[step][0])).count('_') == 1):
                            markup = keyboard.task_13_kb
                            await message.answer(task_words[step][0], reply_markup=markup)
                        else:
                            markup = keyboard.stop_kb
                            await message.answer(task_words[step][0], reply_markup=markup)

                        data = await state.get_data()
                        curv = data['step']
                        await state.update_data(step=curv + 1)
                        #step += 1   +

                        await state.set_state(Base.exercise)
        except Exception as Exp:
            print(Exp)


@router.message(Base.add)
async def start_add(message: Message, state: FSMContext):
    data = await state.get_data()
    chat_id = int(data['key'])
    step = int(data['step'])
    task_id = int(data['task_id'])
    flag_add = bool(data['flag_add'])
    word_was = bool(data['word_was'])
    #global task_id        +
    #global step           +
    #global flag_trainig   +
    if ((await state.get_data())['flag_training'] == False):
        if (message.text.isdigit()):
            await state.update_data(task_id=message.text)

            await state.update_data(flag_training=True)
            #flag_trainig = True   +
        else:
            await message.answer(
                f'Укажи номер задания',
            )
    if ((await state.get_data())['flag_training'] == True):
        try:
            #global flag_add
            #global word_was
            if (flag_add == False):
                markup = keyboard.stop_kb
                await message.answer("На первой строке напиши слово с пропуском '_', на второй правильный ответ \nКогда решишь прекратить, выбери на клавиатуре или напиши слово Стоп", reply_markup=markup)
                await state.update_data(flag_add=True)
                #flag_add = True   +
            else:
                #print(message.text.split('\n'))
                #lock = threading.Lock()
                new_pair = [x.lower() for x in message.text.strip().split('\n')]
                if (message.text.lower() == "стоп" or message.text.strip() == "Стоп"):
                    await state.update_data(flag_add=False)
                    await state.update_data(flag_training=False)
                    await state.update_data(task_id=0)
                    #flag_add = 0           +
                    #task_id = 0            +
                    #flag_trainig = False   +

                    markup = keyboard.start_kb
                    await message.answer( "Хорошо!", reply_markup=markup)
                    await state.set_state(Base.mode)
                elif ((len(message.text.strip().split('\n')) == 2) and (diff_letters(new_pair[0], new_pair[1]) == 1)) or ((await state.get_data())['task_id'] == 16 or (await state.get_data())['task_id'] == 4):
                    #await get_task(message.chat.id)

                    await state.update_data(word_was=False)
                    #word_was = False   +

                    conn = sqlite3.connect('tasks.db')
                    cur = conn.cursor()

                    sqlite_select_query = f"""SELECT words from Tasks where (user_id = {chat_id} and task_id = {(await state.get_data())['task_id']})"""
                    cur.execute(sqlite_select_query)
                    list_of_words = cur.fetchall()

                    cur.close()
                    conn.close()

                    for _ in list_of_words:
                        if (new_pair[0] in _):
                            await state.update_data(word_was=True)
                            #word_was = True   +

                            break
                    if (not(word_was)):
                        await add_task(message.chat.id,(await state.get_data())['task_id'], new_pair[0], new_pair[1])
                        await message.answer("Добавлено!")
                    else:
                        await message.answer("Это слово уже добавлено")

                        await state.update_data(word_was=False)
                        #word_was = False   +
                else:
                    await message.answer("Где-то ошибка, проверьте корректность")
                #lock.release()
        except Exception as exp:
            print("ERROR add_task", exp)

@router.message(Base.mode)
async def start_mode(message: Message, state: FSMContext):
    await state.update_data(key=message.chat.id)
    await state.update_data(mode=message.text)
    await state.update_data(step=0)
    await state.update_data(answer_true=0)
    await state.update_data(answer_false=0)
    await state.update_data(task_id=0)
    await state.update_data(flag_training=False)
    await state.update_data(flag_add=False)
    await state.update_data(word_was=False)

    data = await state.get_data()
    if (data["mode"].lower() == 'моя статистика'):
        await state.clear()
        await state.set_state(Base.mode)
        await stats(message)
    elif (data["mode"].lower() == 'тренировка'):
        await state.set_state(Base.exercise)
        markup = keyboard.training_kb
        await message.answer(
            f'Каким заданием хочешь заняться?',
            reply_markup=markup
        )
    elif (data["mode"].lower() == 'добавить слово'):
        await state.set_state(Base.add)
        markup = keyboard.training_kb
        await message.answer(
            f'В какое задание хочешь добавить слово?',
            reply_markup=markup
        )
    else:
        markup = keyboard.training_kb
        await message.answer(
            f'Выбери один из предложенных вариантов',
            reply_markup=markup
        )


@router.message()
async def start(message: Message, state: FSMContext):
    await state.clear()
    await state.update_data(task_id=0)
    #task_id = 0   +

    if (message.text == '/start'):
        await state.clear()
        await message.answer(
            f"Привет, {message.from_user.first_name}!\nЗдесь ты можешь попрактиковаться в орфографии для ЕГЭ.\nДля управления используй встроенную или обычную клавиатуру",
            reply_markup=keyboard.start_kb)
    else:
        await message.answer(f"Что-то ещё?", reply_markup=keyboard.start_kb)
    await get_stats(message.chat.id)
    await state.update_data(key=message.chat.id)
    await state.set_state(Base.mode)
